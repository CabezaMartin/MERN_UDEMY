{"ast":null,"code":"var _jsxFileName = \"C:\\\\CURSOSUDEMY\\\\PRACTICOS\\\\CURSO MERN\\\\ProyectoWebPersonal\\\\web-personal-cliente\\\\src\\\\components\\\\Admin\\\\User\\\\EditUserForm\\\\EditUserForm.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { Avatar, Form, Icon, Input, Select, Button, Row, Col, notification } from \"antd\";\nimport { useDropzone } from \"react-dropzone\";\nimport { UserOutlined, MailFilled } from \"@ant-design/icons\";\nimport NoAvatar from \"../../../../assets/img/png/no-avatar.png\";\nimport { editUserApi } from \"../../../../api/user\";\nimport { getAvatarApi } from '../../../../api/user';\nimport \"./EditUserForm.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditUserForm(props) {\n  _s();\n\n  const {\n    user,\n    setmodalCollapsed,\n    modalCollapsed\n  } = props;\n  const [avatar, setAvatar] = useState(null);\n  const [userData, setUserData] = useState({\n    name: user.name,\n    lastName: user.lastName,\n    email: user.email,\n    role: user.role,\n    avatar: user.avatar\n  });\n\n  const cleanInput = () => {\n    setUserData({\n      name: '',\n      lastName: '',\n      email: '',\n      role: '',\n      avatar: ''\n    });\n  };\n\n  useEffect(() => {\n    setUserData({\n      name: user.name,\n      lastName: user.lastName,\n      email: user.email,\n      role: user.role,\n      avatar: user.avatar\n    });\n  }, [user]);\n  useEffect(() => {\n    if (user.avatar) {\n      getAvatarApi(user.avatar).then(response => {\n        setAvatar(response);\n      });\n    } else {\n      setAvatar(null);\n    }\n  }, [user]);\n  useEffect(() => {\n    if (avatar) {\n      setUserData({ ...userData,\n        avatar\n      });\n    }\n  }, [avatar]);\n\n  const updateUser = async e => {\n    e.preventDefault();\n    console.log(userData);\n    const result = await editUserApi(userData);\n\n    if (!result.ok) {\n      notification[\"error\"]({\n        message: result.message\n      });\n    } else {\n      cleanInput();\n      notification[\"success\"]({\n        message: result.message\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-user-form\",\n    children: [/*#__PURE__*/_jsxDEV(UploadAvatar, {\n      avatar: avatar,\n      setAvatar: setAvatar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditForm, {\n      userData: userData,\n      setUserData: setUserData,\n      updateUser: updateUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditUserForm, \"i8p/pijbm6ByFjHkv3xg0atfQuE=\");\n\n_c = EditUserForm;\n\nfunction UploadAvatar(props) {\n  _s2();\n\n  const {\n    avatar,\n    setAvatar\n  } = props;\n  const [avatarUrl, setAvatarUrl] = useState(null);\n  useEffect(() => {\n    if (avatar) {\n      if (avatar.preview) {\n        setAvatarUrl(avatar.preview);\n      } else {\n        setAvatarUrl(avatar);\n      }\n    } else {\n      setAvatarUrl(null);\n    }\n  }, [avatar]);\n  const onDrop = useCallback(acceptedFiles => {\n    const file = acceptedFiles[0];\n    setAvatar({\n      file,\n      preview: URL.createObjectURL(file)\n    });\n  }, [setAvatar]);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    accept: \"image,jpeg, image/png\",\n    noKeyboard: true,\n    onDrop\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-avatar\",\n    ...getRootProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), isDragActive ? /*#__PURE__*/_jsxDEV(Avatar, {\n      size: 150,\n      src: NoAvatar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Avatar, {\n      size: 150,\n      src: avatarUrl ? avatarUrl : NoAvatar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(UploadAvatar, \"3QbntbHlKFs2Y8sTpZ7eniFutQY=\", false, function () {\n  return [useDropzone];\n});\n\n_c2 = UploadAvatar;\n\nfunction EditForm(props) {\n  const {\n    userData,\n    setUserData,\n    updateUser\n  } = props;\n  const {\n    Option\n  } = Select;\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"form-edit\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      gutter: 24,\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 23\n            }, this),\n            placeholder: \"Nombre\",\n            value: userData.name,\n            onChange: e => setUserData({ ...userData,\n              name: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 23\n            }, this),\n            placeholder: \"Apellido\",\n            value: userData.lastName,\n            onChange: e => setUserData({ ...userData,\n              lastName: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      gutter: 24,\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            prefix: /*#__PURE__*/_jsxDEV(MailFilled, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 23\n            }, this),\n            placeholder: \"email\",\n            value: userData.email,\n            onChange: e => setUserData({ ...userData,\n              email: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Seleccione un rol\",\n            onChange: e => setUserData({ ...userData,\n              role: e\n            }),\n            value: userData.role,\n            children: [/*#__PURE__*/_jsxDEV(Option, {\n              value: \"admin\",\n              children: \"Administrador\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"editor\",\n              children: \"Editor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"reviwer\",\n              children: \"Revisor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      gutter: 24,\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 23\n            }, this),\n            type: \"password\",\n            placeholder: \"contrase\\xF1a\",\n            onChange: e => setUserData({ ...userData,\n              password: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 23\n            }, this),\n            type: \"password\",\n            placeholder: \"Repetir contrase\\xF1a\",\n            onChange: e => setUserData({ ...userData,\n              repetPassword: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        className: \"btn-submit\",\n        onClick: updateUser,\n        children: \"Actualizar Usuario\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = EditForm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"EditUserForm\");\n$RefreshReg$(_c2, \"UploadAvatar\");\n$RefreshReg$(_c3, \"EditForm\");","map":{"version":3,"sources":["C:/CURSOSUDEMY/PRACTICOS/CURSO MERN/ProyectoWebPersonal/web-personal-cliente/src/components/Admin/User/EditUserForm/EditUserForm.js"],"names":["React","useState","useEffect","useCallback","Avatar","Form","Icon","Input","Select","Button","Row","Col","notification","useDropzone","UserOutlined","MailFilled","NoAvatar","editUserApi","getAvatarApi","EditUserForm","props","user","setmodalCollapsed","modalCollapsed","avatar","setAvatar","userData","setUserData","name","lastName","email","role","cleanInput","then","response","updateUser","e","preventDefault","console","log","result","ok","message","UploadAvatar","avatarUrl","setAvatarUrl","preview","onDrop","acceptedFiles","file","URL","createObjectURL","getRootProps","getInputProps","isDragActive","accept","noKeyboard","EditForm","Option","target","value","password","repetPassword"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { Avatar, Form, Icon, Input, Select, Button, Row, Col, notification } from \"antd\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { UserOutlined, MailFilled } from \"@ant-design/icons\";\r\nimport NoAvatar from \"../../../../assets/img/png/no-avatar.png\";\r\nimport {editUserApi} from \"../../../../api/user\";\r\nimport {getAvatarApi} from '../../../../api/user';\r\nimport \"./EditUserForm.scss\";\r\n\r\nexport default function EditUserForm(props) {\r\n  const { user, setmodalCollapsed, modalCollapsed } = props;\r\n  const [avatar, setAvatar] = useState(null);\r\n  const [userData, setUserData] = useState({\r\n    name: user.name,\r\n    lastName: user.lastName,\r\n    email: user.email,\r\n    role: user.role,\r\n    avatar: user.avatar\r\n  });\r\n\r\n  const cleanInput = ()=>{\r\n    setUserData(\r\n      {\r\n        name: '',\r\n        lastName: '',\r\n        email: '',\r\n        role:'',\r\n        avatar: '',\r\n      }\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    setUserData({\r\n      name: user.name,\r\n      lastName: user.lastName,\r\n      email: user.email,\r\n      role: user.role,\r\n      avatar: user.avatar\r\n    });\r\n  }, [user]);\r\n  useEffect(() => {\r\n    if(user.avatar){\r\n      getAvatarApi(user.avatar).then(response=>{\r\n        setAvatar(response);\r\n      });\r\n    }else{\r\n      setAvatar(null);\r\n    }\r\n  }, [user]);  \r\n  useEffect(() => {\r\n    if (avatar) {\r\n      setUserData({ ...userData, avatar });\r\n    }\r\n  }, [avatar]);\r\n\r\n  const updateUser = async (e) => {\r\n    e.preventDefault();\r\n    console.log(userData);\r\n\r\n\r\n    const result = await editUserApi(userData);\r\n    if(!result.ok){\r\n        notification[\"error\"]({\r\n            message:result.message\r\n        });\r\n    }else{\r\n        cleanInput();\r\n        notification[\"success\"]({\r\n            message:result.message\r\n        })\r\n    }\r\n\r\n\r\n  };\r\n  return (\r\n    <div className=\"edit-user-form\">\r\n      <UploadAvatar avatar={avatar} setAvatar={setAvatar} />\r\n      <EditForm\r\n        userData={userData}\r\n        setUserData={setUserData}\r\n        updateUser={updateUser}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction UploadAvatar(props) { \r\n  const { avatar, setAvatar } = props;\r\n  const[avatarUrl,setAvatarUrl] = useState(null);\r\n\r\n  useEffect(()=>{\r\n    if(avatar){\r\n      if(avatar.preview){\r\n        setAvatarUrl(avatar.preview);\r\n      }else{\r\n        setAvatarUrl(avatar);\r\n      }\r\n    }else{\r\n      setAvatarUrl(null);\r\n    }\r\n  },[avatar]);\r\n\r\n  const onDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      const file = acceptedFiles[0];\r\n      setAvatar({ file, preview: URL.createObjectURL(file) });\r\n    },\r\n    [setAvatar]\r\n  );\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    accept: \"image,jpeg, image/png\",\r\n    noKeyboard: true,\r\n    onDrop,\r\n  });\r\n\r\n  return (\r\n    <div className=\"upload-avatar\" {...getRootProps()}>\r\n      <input {...getInputProps()} />\r\n      {isDragActive ? (\r\n        <Avatar size={150} src={NoAvatar} />\r\n      ) : (\r\n        <Avatar size={150} src={avatarUrl ? avatarUrl : NoAvatar} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction EditForm(props) {\r\n  const { userData, setUserData, updateUser } = props;\r\n  const { Option } = Select;\r\n\r\n  return (\r\n    <Form className=\"form-edit\">\r\n      <Row gutter={24}>\r\n        <Col span={12}>\r\n          <Form.Item>\r\n            <Input\r\n              prefix={<UserOutlined />}\r\n              placeholder=\"Nombre\"\r\n              value={userData.name}\r\n              onChange={(e) =>\r\n                setUserData({ ...userData, name: e.target.value })\r\n              }\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={12}>\r\n          <Form.Item>\r\n            <Input\r\n              prefix={<UserOutlined />}\r\n              placeholder=\"Apellido\"\r\n              value={userData.lastName}\r\n              onChange={(e) =>\r\n                setUserData({ ...userData, lastName: e.target.value })\r\n              }\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={24}>\r\n        <Col span={12}>\r\n          <Form.Item>\r\n            <Input\r\n              prefix={<MailFilled />}\r\n              placeholder=\"email\"\r\n              value={userData.email}\r\n              onChange={(e) =>\r\n                setUserData({ ...userData, email: e.target.value })\r\n              }\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={12}>\r\n          <Form.Item>\r\n            <Select\r\n              placeholder=\"Seleccione un rol\"\r\n              onChange={(e) => setUserData({ ...userData, role: e })}\r\n              value={userData.role}\r\n            >\r\n              <Option value=\"admin\">Administrador</Option>\r\n              <Option value=\"editor\">Editor</Option>\r\n              <Option value=\"reviwer\">Revisor</Option>\r\n            </Select>\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={24}>\r\n        <Col span={12}>\r\n          <Form.Item>\r\n            <Input\r\n              prefix={<UserOutlined />}\r\n              type=\"password\"\r\n              placeholder=\"contraseña\"\r\n              onChange={(e) =>\r\n                setUserData({ ...userData, password: e.target.value })\r\n              }\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={12}>\r\n          <Form.Item>\r\n            <Input\r\n              prefix={<UserOutlined />}\r\n              type=\"password\"\r\n              placeholder=\"Repetir contraseña\"\r\n              onChange={(e) =>\r\n                setUserData({ ...userData, repetPassword: e.target.value })\r\n              }\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      <Form.Item>\r\n        <Button type=\"primary\" className=\"btn-submit\" onClick={updateUser}>\r\n          Actualizar Usuario\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}