{"ast":null,"code":"var _jsxFileName = \"C:\\\\CURSOSUDEMY\\\\PRACTICOS\\\\CURSO MERN\\\\ProyectoWebPersonal\\\\web-personal-cliente\\\\src\\\\components\\\\Admin\\\\User\\\\EditUserForm\\\\EditUserForm.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { Avatar, Form, Icon, Input, Select, Button, Row, Col, notification, message } from \"antd\";\nimport { useDropzone } from \"react-dropzone\";\nimport { UserOutlined, MailFilled } from \"@ant-design/icons\";\nimport NoAvatar from \"../../../../assets/img/png/no-avatar.png\";\nimport { editUserApi, getAvatarApi, updateUserApi, uploadAvatarApi } from \"../../../../api/user\";\nimport { getAccessToken } from \"../../../../api/auth\"; //import {getAvatarApi} from '../../../../api/user';\n\nimport \"./EditUserForm.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditUserForm(props) {\n  _s();\n\n  const {\n    user,\n    setmodalCollapsed,\n    setReloadUsers\n  } = props;\n  const [avatar, setAvatar] = useState(null);\n  const [userData, setUserData] = useState({\n    name: user.name,\n    lastName: user.lastName,\n    email: user.email,\n    role: user.role,\n    avatar: user.avatar\n  });\n\n  const cleanInput = () => {\n    setUserData({\n      name: \"\",\n      lastName: \"\",\n      email: \"\",\n      role: \"\",\n      avatar: \"\"\n    });\n  };\n\n  useEffect(() => {\n    setUserData({\n      name: user.name,\n      lastName: user.lastName,\n      email: user.email,\n      role: user.role,\n      avatar: user.avatar\n    });\n  }, [user]);\n  useEffect(() => {\n    if (user.avatar) {\n      getAvatarApi(user.avatar).then(response => {\n        setAvatar(response);\n      });\n    } else {\n      setAvatar(null);\n    }\n  }, [user]);\n  useEffect(() => {\n    if (avatar) {\n      setUserData({ ...userData,\n        avatar: avatar.file\n      });\n    }\n  }, [avatar]);\n\n  const updateUser = async e => {\n    e.preventDefault(); //console.log(userData);\n\n    const token = getAccessToken();\n    let userUpdate = userData;\n\n    if (userUpdate.password || userUpdate.repetPassword) {\n      if (userUpdate.password !== userUpdate.repetPassword) {\n        notification[\"error\"]({\n          message: \"Las contraseÃ±as tienen que se iguales.\"\n        });\n      }\n\n      console.log(userUpdate); //return;\n    }\n\n    if (!userUpdate.name || !userUpdate.lastName || !userUpdate.email) {\n      notification[\"error\"]({\n        message: \"El nombre, apellidos y email son obligatorios.\"\n      });\n      return;\n    }\n\n    if (typeof userUpdate.avatar === \"object\") {\n      uploadAvatarApi(token, userUpdate.avatar, user._id).then(response => {\n        userUpdate.avatar = response.avatarName;\n        updateUserApi(token, userUpdate, user._id).then(result => {\n          notification[\"success\"]({\n            message: result.message\n          });\n          setmodalCollapsed(false);\n          setReloadUsers(true);\n        });\n      });\n    } else {\n      updateUserApi(token, userUpdate, user._id).then(result => {\n        notification[\"success\"]({\n          message: result.message\n        });\n        setmodalCollapsed(false);\n        setReloadUsers(true);\n      });\n    }\n    /*const result = await editUserApi(userData);\r\n    if(!result.ok){\r\n        notification[\"error\"]({\r\n            message:result.message\r\n        });\r\n    }else{\r\n        cleanInput();\r\n        notification[\"success\"]({\r\n            message:result.message\r\n        })\r\n    }*/\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-user-form\",\n    children: [/*#__PURE__*/_jsxDEV(UploadAvatar, {\n      avatar: avatar,\n      setAvatar: setAvatar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(EditForm, {\n      userData: userData,\n      setUserData: setUserData,\n      updateUser: updateUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 12\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 14\n  }, this);\n}\n\n_s(EditUserForm, \"M66N7bms0sii/d+sqLTq5sDrcM0=\");\n\n_c = EditUserForm;\n\nfunction UploadAvatar(props) {\n  _s2();\n\n  const {\n    avatar,\n    setAvatar\n  } = props;\n  const [avatarUrl, setAvatarUrl] = useState(null);\n  useEffect(() => {\n    if (avatar) {\n      if (avatar.preview) {\n        setAvatarUrl(avatar.preview);\n      } else {\n        setAvatarUrl(avatar);\n      }\n    } else {\n      setAvatarUrl(null);\n    }\n  }, [avatar]);\n  const onDrop = useCallback(acceptedFiles => {\n    const file = acceptedFiles[0];\n    setAvatar({\n      file,\n      preview: URL.createObjectURL(file)\n    });\n  }, [setAvatar]);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    accept: \"image,jpeg, image/png\",\n    noKeyboard: true,\n    onDrop\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-avatar\",\n    ...getRootProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this), \" \", isDragActive ? /*#__PURE__*/_jsxDEV(Avatar, {\n      size: 150,\n      src: NoAvatar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 30\n    }, this) : /*#__PURE__*/_jsxDEV(Avatar, {\n      size: 150,\n      src: avatarUrl ? avatarUrl : NoAvatar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 19\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 14\n  }, this);\n}\n\n_s2(UploadAvatar, \"T41l68YNwpYUsqIJrKkzocyb0pw=\", false, function () {\n  return [useDropzone];\n});\n\n_c2 = UploadAvatar;\n\nfunction EditForm(props) {\n  const {\n    userData,\n    setUserData,\n    updateUser\n  } = props;\n  const {\n    Option\n  } = Select;\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"form-edit\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      gutter: 24,\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 26\n            }, this),\n            placeholder: \"Nombre\",\n            value: userData.name,\n            onChange: e => setUserData({ ...userData,\n              name: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 9\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 9\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 26\n            }, this),\n            placeholder: \"Apellido\",\n            value: userData.lastName,\n            onChange: e => setUserData({ ...userData,\n              lastName: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 9\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 9\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 15\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Row, {\n      gutter: 24,\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            prefix: /*#__PURE__*/_jsxDEV(MailFilled, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 26\n            }, this),\n            placeholder: \"email\",\n            value: userData.email,\n            onChange: e => setUserData({ ...userData,\n              email: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 9\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 9\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          children: [/*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Seleccione un rol\",\n            onChange: e => setUserData({ ...userData,\n              role: e\n            }),\n            value: userData.role,\n            children: [/*#__PURE__*/_jsxDEV(Option, {\n              value: \"admin\",\n              children: \" Administrador \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 9\n            }, this), \" \", /*#__PURE__*/_jsxDEV(Option, {\n              value: \"editor\",\n              children: \" Editor \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 59\n            }, this), \" \", /*#__PURE__*/_jsxDEV(Option, {\n              value: \"reviwer\",\n              children: \" Revisor \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 53\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 9\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 9\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 15\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 15\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Row, {\n      gutter: 24,\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 26\n            }, this),\n            type: \"password\",\n            placeholder: \"contrase\\xF1a\",\n            onChange: e => setUserData({ ...userData,\n              password: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 9\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 9\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 26\n            }, this),\n            type: \"password\",\n            placeholder: \"Repetir contrase\\xF1a\",\n            onChange: e => setUserData({ ...userData,\n              repetPassword: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 9\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 9\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 15\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 15\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        className: \"btn-submit\",\n        onClick: updateUser,\n        children: \"Actualizar Usuario \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 15\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 14\n  }, this);\n}\n\n_c3 = EditForm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"EditUserForm\");\n$RefreshReg$(_c2, \"UploadAvatar\");\n$RefreshReg$(_c3, \"EditForm\");","map":{"version":3,"sources":["C:/CURSOSUDEMY/PRACTICOS/CURSO MERN/ProyectoWebPersonal/web-personal-cliente/src/components/Admin/User/EditUserForm/EditUserForm.js"],"names":["React","useState","useEffect","useCallback","Avatar","Form","Icon","Input","Select","Button","Row","Col","notification","message","useDropzone","UserOutlined","MailFilled","NoAvatar","editUserApi","getAvatarApi","updateUserApi","uploadAvatarApi","getAccessToken","EditUserForm","props","user","setmodalCollapsed","setReloadUsers","avatar","setAvatar","userData","setUserData","name","lastName","email","role","cleanInput","then","response","file","updateUser","e","preventDefault","token","userUpdate","password","repetPassword","console","log","_id","avatarName","result","UploadAvatar","avatarUrl","setAvatarUrl","preview","onDrop","acceptedFiles","URL","createObjectURL","getRootProps","getInputProps","isDragActive","accept","noKeyboard","EditForm","Option","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport {\r\n    Avatar,\r\n    Form,\r\n    Icon,\r\n    Input,\r\n    Select,\r\n    Button,\r\n    Row,\r\n    Col,\r\n    notification,\r\n    message,\r\n} from \"antd\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { UserOutlined, MailFilled } from \"@ant-design/icons\";\r\nimport NoAvatar from \"../../../../assets/img/png/no-avatar.png\";\r\nimport {\r\n    editUserApi,\r\n    getAvatarApi,\r\n    updateUserApi,\r\n    uploadAvatarApi,\r\n} from \"../../../../api/user\";\r\nimport { getAccessToken } from \"../../../../api/auth\";\r\n//import {getAvatarApi} from '../../../../api/user';\r\nimport \"./EditUserForm.scss\";\r\n\r\nexport default function EditUserForm(props) {\r\n    const { user, setmodalCollapsed, setReloadUsers } = props;\r\n    const [avatar, setAvatar] = useState(null);\r\n    const [userData, setUserData] = useState({\r\n        name: user.name,\r\n        lastName: user.lastName,\r\n        email: user.email,\r\n        role: user.role,\r\n        avatar: user.avatar,\r\n    });\r\n\r\n    const cleanInput = () => {\r\n        setUserData({\r\n            name: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            role: \"\",\r\n            avatar: \"\",\r\n        });\r\n    };\r\n    useEffect(() => {\r\n        setUserData({\r\n            name: user.name,\r\n            lastName: user.lastName,\r\n            email: user.email,\r\n            role: user.role,\r\n            avatar: user.avatar,\r\n        });\r\n    }, [user]);\r\n    useEffect(() => {\r\n        if (user.avatar) {\r\n            getAvatarApi(user.avatar).then((response) => {\r\n                setAvatar(response);\r\n            });\r\n        } else {\r\n            setAvatar(null);\r\n        }\r\n    }, [user]);\r\n    useEffect(() => {\r\n        if (avatar) {\r\n            setUserData({...userData, avatar: avatar.file });\r\n        }\r\n    }, [avatar]);\r\n\r\n    const updateUser = async(e) => {\r\n        e.preventDefault();\r\n        //console.log(userData);\r\n        const token = getAccessToken();\r\n        let userUpdate = userData;\r\n\r\n        if (userUpdate.password || userUpdate.repetPassword) {\r\n            if (userUpdate.password !== userUpdate.repetPassword) {\r\n                notification[\"error\"]({\r\n                    message: \"Las contraseÃ±as tienen que se iguales.\",\r\n                });\r\n            }\r\n            console.log(userUpdate);\r\n            //return;\r\n        }\r\n        if (!userUpdate.name || !userUpdate.lastName || !userUpdate.email) {\r\n            notification[\"error\"]({\r\n                message: \"El nombre, apellidos y email son obligatorios.\",\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (typeof userUpdate.avatar === \"object\") {\r\n            uploadAvatarApi(token, userUpdate.avatar, user._id).then((response) => {\r\n                userUpdate.avatar = response.avatarName;\r\n                updateUserApi(token, userUpdate, user._id).then((result) => {\r\n                    notification[\"success\"]({\r\n                        message: result.message,\r\n                    });\r\n                    setmodalCollapsed(false);\r\n                    setReloadUsers(true);\r\n                });\r\n            });\r\n        } else {\r\n            updateUserApi(token, userUpdate, user._id).then((result) => {\r\n                notification[\"success\"]({\r\n                    message: result.message,\r\n                });\r\n                setmodalCollapsed(false);\r\n                setReloadUsers(true);\r\n            });\r\n        }\r\n        /*const result = await editUserApi(userData);\r\n        if(!result.ok){\r\n            notification[\"error\"]({\r\n                message:result.message\r\n            });\r\n        }else{\r\n            cleanInput();\r\n            notification[\"success\"]({\r\n                message:result.message\r\n            })\r\n        }*/\r\n    };\r\n    return ( <\r\n        div className = \"edit-user-form\" >\r\n        <\r\n        UploadAvatar avatar = { avatar }\r\n        setAvatar = { setAvatar }\r\n        /> <\r\n        EditForm userData = { userData }\r\n        setUserData = { setUserData }\r\n        updateUser = { updateUser }\r\n        /> <\r\n        /div>\r\n    );\r\n}\r\n\r\nfunction UploadAvatar(props) {\r\n    const { avatar, setAvatar } = props;\r\n    const [avatarUrl, setAvatarUrl] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (avatar) {\r\n            if (avatar.preview) {\r\n                setAvatarUrl(avatar.preview);\r\n            } else {\r\n                setAvatarUrl(avatar);\r\n            }\r\n        } else {\r\n            setAvatarUrl(null);\r\n        }\r\n    }, [avatar]);\r\n\r\n    const onDrop = useCallback(\r\n        (acceptedFiles) => {\r\n            const file = acceptedFiles[0];\r\n            setAvatar({ file, preview: URL.createObjectURL(file) });\r\n        }, [setAvatar]\r\n    );\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n        accept: \"image,jpeg, image/png\",\r\n        noKeyboard: true,\r\n        onDrop,\r\n    });\r\n\r\n    return ( <\r\n        div className = \"upload-avatar\" {...getRootProps() } >\r\n        <\r\n        input {...getInputProps() }\r\n        /> {\r\n            isDragActive ? ( <\r\n                Avatar size = { 150 }\r\n                src = { NoAvatar }\r\n                />\r\n            ) : ( <\r\n                Avatar size = { 150 }\r\n                src = { avatarUrl ? avatarUrl : NoAvatar }\r\n                />\r\n            )\r\n        } <\r\n        /div>\r\n    );\r\n}\r\n\r\nfunction EditForm(props) {\r\n    const { userData, setUserData, updateUser } = props;\r\n    const { Option } = Select;\r\n\r\n    return ( <\r\n        Form className = \"form-edit\" >\r\n        <\r\n        Row gutter = { 24 } >\r\n        <\r\n        Col span = { 12 } >\r\n        <\r\n        Form.Item >\r\n        <\r\n        Input prefix = { < UserOutlined / > }\r\n        placeholder = \"Nombre\"\r\n        value = { userData.name }\r\n        onChange = {\r\n            (e) =>\r\n            setUserData({...userData, name: e.target.value })\r\n        }\r\n        /> <\r\n        /Form.Item> <\r\n        /Col> <\r\n        Col span = { 12 } >\r\n        <\r\n        Form.Item >\r\n        <\r\n        Input prefix = { < UserOutlined / > }\r\n        placeholder = \"Apellido\"\r\n        value = { userData.lastName }\r\n        onChange = {\r\n            (e) =>\r\n            setUserData({...userData, lastName: e.target.value })\r\n        }\r\n        /> <\r\n        /Form.Item> <\r\n        /Col> <\r\n        /Row> <\r\n        Row gutter = { 24 } >\r\n        <\r\n        Col span = { 12 } >\r\n        <\r\n        Form.Item >\r\n        <\r\n        Input prefix = { < MailFilled / > }\r\n        placeholder = \"email\"\r\n        value = { userData.email }\r\n        onChange = {\r\n            (e) =>\r\n            setUserData({...userData, email: e.target.value })\r\n        }\r\n        /> <\r\n        /Form.Item> <\r\n        /Col> <\r\n        Col span = { 12 } >\r\n        <\r\n        Form.Item >\r\n        <\r\n        Select placeholder = \"Seleccione un rol\"\r\n        onChange = {\r\n            (e) => setUserData({...userData, role: e }) }\r\n        value = { userData.role } >\r\n        <\r\n        Option value = \"admin\" > Administrador < /Option> <\r\n        Option value = \"editor\" > Editor < /Option> <\r\n        Option value = \"reviwer\" > Revisor < /Option> <\r\n        /Select> <\r\n        /Form.Item> <\r\n        /Col> <\r\n        /Row> <\r\n        Row gutter = { 24 } >\r\n        <\r\n        Col span = { 12 } >\r\n        <\r\n        Form.Item >\r\n        <\r\n        Input prefix = { < UserOutlined / > }\r\n        type = \"password\"\r\n        placeholder = \"contraseÃ±a\"\r\n        onChange = {\r\n            (e) =>\r\n            setUserData({...userData, password: e.target.value })\r\n        }\r\n        /> <\r\n        /Form.Item> <\r\n        /Col> <\r\n        Col span = { 12 } >\r\n        <\r\n        Form.Item >\r\n        <\r\n        Input prefix = { < UserOutlined / > }\r\n        type = \"password\"\r\n        placeholder = \"Repetir contraseÃ±a\"\r\n        onChange = {\r\n            (e) =>\r\n            setUserData({...userData, repetPassword: e.target.value })\r\n        }\r\n        /> <\r\n        /Form.Item> <\r\n        /Col> <\r\n        /Row> <\r\n        Form.Item >\r\n        <\r\n        Button type = \"primary\"\r\n        className = \"btn-submit\"\r\n        onClick = { updateUser } >\r\n        Actualizar Usuario <\r\n        /Button> <\r\n        /Form.Item> <\r\n        /Form>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}