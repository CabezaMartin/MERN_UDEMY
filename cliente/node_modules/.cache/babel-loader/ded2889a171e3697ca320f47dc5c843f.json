{"ast":null,"code":"var _jsxFileName = \"C:\\\\CURSOSUDEMY\\\\PRACTICOS\\\\CURSO MERN\\\\ProyectoWebPersonal\\\\web-personal-cliente\\\\src\\\\components\\\\Admin\\\\User\\\\ListUsers\\\\ListUsers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./ListUsers.scss\";\nimport { EditOutlined, StopOutlined, DeleteOutlined, CheckOutlined } from \"@ant-design/icons\";\nimport { Switch, List, Button, Avatar } from \"antd\";\nimport NoAvatar from \"../../../../assets/img/png/no-avatar.png\";\nimport Modal from \"../../../Admin/Modal\";\nimport User from \"../../../../pages/Admin/Users/Users\";\nimport EditUserForm from \"../../../../components/Admin/User/EditUserForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ListUsers(props) {\n  _s();\n\n  const [modalCollapsed, setmodalCollapsed] = useState(false);\n  const {\n    usersActive,\n    usersInactive\n  } = props;\n  const [viewUsersActives, setViewUsersActives] = useState(true);\n  const [modalTitle, setModalTitle] = useState(\"\");\n  const [modalContent, setModalContent] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-users\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-users__switch\",\n      children: [/*#__PURE__*/_jsxDEV(Switch, {\n        defaultChecked: true,\n        onChange: () => setViewUsersActives(!viewUsersActives)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", viewUsersActives ? \"UsuariosActivos\" : \"Usuarios inactivos\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 12\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), \" \", viewUsersActives ? /*#__PURE__*/_jsxDEV(UsersActive, {\n      usersActive: usersActive,\n      setmodalCollapsed: setmodalCollapsed,\n      modalCollapsed: modalCollapsed,\n      setModalTitle: setModalTitle,\n      setModalContent: setModalContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 34\n    }, this) : /*#__PURE__*/_jsxDEV(UsersInactive, {\n      usersInactive: usersInactive\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: modalTitle,\n      isVisible: modalCollapsed,\n      setIsVisible: setmodalCollapsed,\n      children: [modalContent, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 14\n  }, this);\n}\n\n_s(ListUsers, \"BfLfHvEBFhdejnHJHENw8Cf9Mlw=\");\n\n_c = ListUsers;\n\nfunction UsersActive(props) {\n  const {\n    usersActive,\n    setmodalCollapsed,\n    modalCollapsed,\n    setModalContent,\n    setModalTitle\n  } = props;\n\n  const editUser = user => {\n    console.log(\"1.\" + user);\n    setmodalCollapsed(!modalCollapsed);\n    setModalTitle(`Editar ${user.name ? user.name : '...'} ${user.lastName ? user.lastName : '...'}`);\n    setModalContent( /*#__PURE__*/_jsxDEV(EditUserForm, {\n      user: usersActive\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 30\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(List, {\n    className: \"users-active\",\n    itemLayout: \"horizontal\",\n    dataSource: usersActive,\n    renderItem: user => /*#__PURE__*/_jsxDEV(List.Item, {\n      actions: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: () => editUser(user),\n        children: /*#__PURE__*/_jsxDEV(EditOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"danger\",\n        onClick: () => console.log(\"Desactivar usuario\"),\n        children: /*#__PURE__*/_jsxDEV(StopOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 43\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"danger\",\n        onClick: () => console.log(\"Eliminar usuario\"),\n        children: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 43\n      }, this)],\n      children: [/*#__PURE__*/_jsxDEV(List.Item.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          src: user.avatar ? user.avatar : NoAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 51\n        }, this),\n        title: `\n                            ${user.name ? user.name : \"..\"}\n                            ${user.lastName ? user.lastName : \"...\"}\n                        `,\n        description: user.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 33\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 22\n  }, this);\n}\n\n_c2 = UsersActive;\n\nfunction UsersInactive(props) {\n  const {\n    usersInactive\n  } = props;\n  return /*#__PURE__*/_jsxDEV(List, {\n    className: \"users-active\",\n    itemLayout: \"horizontal\",\n    dataSource: usersInactive,\n    renderItem: user => /*#__PURE__*/_jsxDEV(List.Item, {\n      actions: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: () => console.log(\"Activar usuario\"),\n        children: /*#__PURE__*/_jsxDEV(CheckOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 35\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"danger\",\n        onClick: () => console.log(\"Eliminar usuario\"),\n        children: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 47\n      }, this)],\n      children: [/*#__PURE__*/_jsxDEV(List.Item.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          src: user.avatar ? user.avatar : NoAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 55\n        }, this),\n        title: `\n                                ${user.name ? user.name : \"..\"}\n                                ${user.lastName ? user.lastName : \"...\"}\n                            `,\n        description: user.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 29\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 37\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 26\n  }, this);\n}\n\n_c3 = UsersInactive;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ListUsers\");\n$RefreshReg$(_c2, \"UsersActive\");\n$RefreshReg$(_c3, \"UsersInactive\");","map":{"version":3,"sources":["C:/CURSOSUDEMY/PRACTICOS/CURSO MERN/ProyectoWebPersonal/web-personal-cliente/src/components/Admin/User/ListUsers/ListUsers.js"],"names":["React","useState","EditOutlined","StopOutlined","DeleteOutlined","CheckOutlined","Switch","List","Button","Avatar","NoAvatar","Modal","User","EditUserForm","ListUsers","props","modalCollapsed","setmodalCollapsed","usersActive","usersInactive","viewUsersActives","setViewUsersActives","modalTitle","setModalTitle","modalContent","setModalContent","UsersActive","editUser","user","console","log","name","lastName","avatar","email","UsersInactive"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./ListUsers.scss\";\r\nimport { EditOutlined, StopOutlined, DeleteOutlined, CheckOutlined } from \"@ant-design/icons\";\r\nimport { Switch, List, Button, Avatar } from \"antd\";\r\nimport NoAvatar from \"../../../../assets/img/png/no-avatar.png\";\r\nimport Modal from \"../../../Admin/Modal\";\r\nimport User from \"../../../../pages/Admin/Users/Users\";\r\nimport EditUserForm from \"../../../../components/Admin/User/EditUserForm\";\r\n\r\nexport default function ListUsers(props) {\r\n    const [modalCollapsed, setmodalCollapsed] = useState(false);\r\n    const { usersActive, usersInactive } = props;\r\n    const [viewUsersActives, setViewUsersActives] = useState(true);\r\n    const [modalTitle, setModalTitle] = useState(\"\");\r\n    const [modalContent, setModalContent] = useState(null);\r\n\r\n    return ( <\r\n        div className = \"list-users\" >\r\n        <\r\n        div className = \"list-users__switch\" >\r\n        <\r\n        Switch defaultChecked onChange = {\r\n            () => setViewUsersActives(!viewUsersActives) }\r\n        /> <\r\n        span > { viewUsersActives ? \"UsuariosActivos\" : \"Usuarios inactivos\" } <\r\n        /span> <\r\n        /div> {\r\n            viewUsersActives ? ( <\r\n                UsersActive usersActive = { usersActive }\r\n                setmodalCollapsed = { setmodalCollapsed }\r\n                modalCollapsed = { modalCollapsed }\r\n                setModalTitle = { setModalTitle }\r\n                setModalContent = { setModalContent }\r\n\r\n                />\r\n            ) : ( <\r\n                UsersInactive usersInactive = { usersInactive }\r\n                />\r\n            )\r\n        }\r\n\r\n        <\r\n        Modal title = { modalTitle }\r\n        isVisible = { modalCollapsed }\r\n        setIsVisible = { setmodalCollapsed } >\r\n        { modalContent } <\r\n        /Modal> <\r\n        /div>\r\n    );\r\n}\r\n\r\nfunction UsersActive(props) {\r\n    const {\r\n        usersActive,\r\n        setmodalCollapsed,\r\n        modalCollapsed,\r\n        setModalContent,\r\n        setModalTitle\r\n    } = props;\r\n\r\n    const editUser = user => {\r\n            console.log(\"1.\" + user);\r\n            setmodalCollapsed(!modalCollapsed)\r\n            setModalTitle(`Editar ${user.name ? user.name : '...'} ${user.lastName ? user.lastName : '...'}`);\r\n            setModalContent( < EditUserForm user = { usersActive }\r\n                />);\r\n            }\r\n\r\n            return ( <\r\n                List className = \"users-active\"\r\n                itemLayout = \"horizontal\"\r\n                dataSource = { usersActive }\r\n                renderItem = {\r\n                    (user) => ( <\r\n                        List.Item actions = {\r\n                            [ <\r\n                                Button\r\n                                type = \"primary\"\r\n                                onClick = {\r\n                                    () => editUser(user) } >\r\n                                <\r\n                                EditOutlined / >\r\n                                <\r\n                                /Button>, <\r\n                                Button\r\n                                type = \"danger\"\r\n                                onClick = {\r\n                                    () => console.log(\"Desactivar usuario\") } >\r\n                                <\r\n                                StopOutlined / >\r\n                                <\r\n                                /Button>, <\r\n                                Button\r\n                                type = \"danger\"\r\n                                onClick = {\r\n                                    () => console.log(\"Eliminar usuario\") } >\r\n                                <\r\n                                DeleteOutlined / >\r\n                                <\r\n                                /Button>,\r\n                            ]\r\n                        } >\r\n                        <\r\n                        List.Item.Meta avatar = { < Avatar src = { user.avatar ? user.avatar : NoAvatar }\r\n                            />}\r\n                            title = { `\r\n                            ${user.name ? user.name : \"..\"}\r\n                            ${user.lastName ? user.lastName : \"...\"}\r\n                        ` }\r\n                            description = { user.email }\r\n                            /> <\r\n                            /List.Item>\r\n                        )\r\n                    }\r\n                    />\r\n                );\r\n            }\r\n\r\n            function UsersInactive(props) {\r\n                const { usersInactive } = props;\r\n                return ( <\r\n                    List className = \"users-active\"\r\n                    itemLayout = \"horizontal\"\r\n                    dataSource = { usersInactive }\r\n                    renderItem = {\r\n                        (user) => ( <\r\n                            List.Item actions = {\r\n                                [ <\r\n                                    Button\r\n                                    type = \"primary\"\r\n                                    onClick = {\r\n                                        () => console.log(\"Activar usuario\") } >\r\n                                    <\r\n                                    CheckOutlined / >\r\n                                    <\r\n                                    /Button>, <\r\n                                    Button\r\n                                    type = \"danger\"\r\n                                    onClick = {\r\n                                        () => console.log(\"Eliminar usuario\") } >\r\n                                    <\r\n                                    DeleteOutlined / >\r\n                                    <\r\n                                    /Button>,\r\n                                ]\r\n                            } >\r\n                            <\r\n                            List.Item.Meta avatar = { < Avatar src = { user.avatar ? user.avatar : NoAvatar }\r\n                                />}\r\n                                title = { `\r\n                                ${user.name ? user.name : \"..\"}\r\n                                ${user.lastName ? user.lastName : \"...\"}\r\n                            ` }\r\n                                description = { user.email }\r\n                                /> <\r\n                                /List.Item>\r\n                            )\r\n                        }\r\n                        />\r\n                    );\r\n                }"]},"metadata":{},"sourceType":"module"}