{"ast":null,"code":"var _jsxFileName = \"C:\\\\CURSOSUDEMY\\\\PRACTICOS\\\\CURSO MERN\\\\ProyectoWebPersonal\\\\web-personal-cliente\\\\src\\\\providers\\\\AuthProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, createContext } from \"react\";\nimport { getAccessToken, getRefreshToken, logout, refreshToken } from '../api/auth';\nimport jwtDecode from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport function AuthProvider(props) {\n  _s();\n\n  const {\n    children\n  } = props;\n  const [user, setUser] = useState({\n    user: null,\n    isLoading: true\n  });\n  useEffect(() => {\n    checkUserLogin(setUser);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: user,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 12\n  }, this); //console.log(props);\n}\n\n_s(AuthProvider, \"R1uiF3RN05Yr/VQfLE0eTfmMF1U=\");\n\n_c = AuthProvider;\n\nfunction checkUserLogin(setUser) {\n  const accessToken = getAccessToken();\n\n  if (!accessToken) {\n    const refToken = getRefreshToken();\n\n    if (!refToken) {\n      logout();\n      setUser({\n        user: null,\n        isLoading: false\n      });\n    } else {\n      refreshToken(refToken);\n    }\n  } else {\n    setUser({\n      isLoading: false,\n      user: accessToken\n    });\n  }\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["C:/CURSOSUDEMY/PRACTICOS/CURSO MERN/ProyectoWebPersonal/web-personal-cliente/src/providers/AuthProvider.js"],"names":["React","useState","useEffect","createContext","getAccessToken","getRefreshToken","logout","refreshToken","jwtDecode","AuthContext","AuthProvider","props","children","user","setUser","isLoading","checkUserLogin","accessToken","refToken"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,aAArC,QAA0D,OAA1D;AACA,SAASC,cAAT,EAAyBC,eAAzB,EAA0CC,MAA1C,EAAkDC,YAAlD,QAAsE,aAAtE;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAGA,OAAO,MAAMC,WAAW,gBAAGN,aAAa,EAAjC;AAEP,OAAO,SAASO,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAChC,QAAM;AAAEC,IAAAA;AAAF,MAAeD,KAArB;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC;AAC7BY,IAAAA,IAAI,EAAE,IADuB;AAE7BE,IAAAA,SAAS,EAAE;AAFkB,GAAD,CAAhC;AAKAb,EAAAA,SAAS,CAAC,MAAI;AACVc,IAAAA,cAAc,CAACF,OAAD,CAAd;AACH,GAFQ,EAEP,EAFO,CAAT;AAIA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAED,IAA7B;AAAA,cAAoCD;AAApC;AAAA;AAAA;AAAA;AAAA,UAAP,CAXgC,CAYhC;AACH;;GAbeF,Y;;KAAAA,Y;;AAehB,SAASM,cAAT,CAAwBF,OAAxB,EAAgC;AAC5B,QAAMG,WAAW,GAAGb,cAAc,EAAlC;;AAEA,MAAG,CAACa,WAAJ,EAAgB;AACZ,UAAMC,QAAQ,GAAGb,eAAe,EAAhC;;AACA,QAAG,CAACa,QAAJ,EAAa;AACTZ,MAAAA,MAAM;AACNQ,MAAAA,OAAO,CAAC;AACJD,QAAAA,IAAI,EAAC,IADD;AAEJE,QAAAA,SAAS,EAAC;AAFN,OAAD,CAAP;AAIH,KAND,MAMK;AACDR,MAAAA,YAAY,CAACW,QAAD,CAAZ;AACH;AACJ,GAXD,MAWK;AACDJ,IAAAA,OAAO,CAAC;AACJC,MAAAA,SAAS,EAAC,KADN;AAEJF,MAAAA,IAAI,EAACI;AAFD,KAAD,CAAP;AAIH;AACJ","sourcesContent":["import React, { useState, useEffect, createContext } from \"react\";\r\nimport { getAccessToken, getRefreshToken, logout, refreshToken } from '../api/auth';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport function AuthProvider(props) {\r\n    const { children } = props;\r\n    const [user, setUser] = useState({\r\n        user: null,\r\n        isLoading: true\r\n    });\r\n\r\n    useEffect(()=>{\r\n        checkUserLogin(setUser);\r\n    },[]);\r\n\r\n    return <AuthContext.Provider value={user}>{children}</AuthContext.Provider>\r\n    //console.log(props);\r\n}\r\n\r\nfunction checkUserLogin(setUser){\r\n    const accessToken = getAccessToken();\r\n\r\n    if(!accessToken){\r\n        const refToken = getRefreshToken();\r\n        if(!refToken){\r\n            logout();\r\n            setUser({\r\n                user:null,\r\n                isLoading:false\r\n            });\r\n        }else{\r\n            refreshToken(refToken);\r\n        }\r\n    }else{\r\n        setUser({\r\n            isLoading:false,\r\n            user:accessToken\r\n        });\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}