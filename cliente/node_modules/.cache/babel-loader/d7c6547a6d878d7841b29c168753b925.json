{"ast":null,"code":"var _jsxFileName = \"C:\\\\CURSOSUDEMY\\\\PRACTICOS\\\\CURSO MERN\\\\ProyectoWebPersonal\\\\web-personal-cliente\\\\src\\\\components\\\\RegisterForm\\\\RegisterForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Input, Button, Checkbox, notification } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport \"./RegisterForm.scss\";\nimport { signUpApi } from \"../../api/user\";\nimport { emailValidate, minLengthValidations } from \"../../utils/formValidation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RegisterForm() {\n  _s();\n\n  const [state, setstate] = useState({\n    email: \"\",\n    password: \"\",\n    repeatPassword: \"\",\n    privacyPolicie: false\n  });\n  const [formValid, setFormValid] = useState({\n    email: false,\n    password: false,\n    repeatPassword: false,\n    privacyPolicie: false\n  });\n\n  const changeForm = e => {\n    if (e.target.name === \"privacyPolicie\") {\n      setstate({ ...state,\n        [e.target.name]: e.target.checked\n      });\n    } else {\n      setstate({ ...state,\n        [e.target.name]: e.target.value\n      });\n    }\n  };\n\n  const changeValidation = e => {\n    const {\n      type,\n      name\n    } = e.target; // eslint-disable-next-line default-case\n\n    switch (type) {\n      case \"email\":\n        setFormValid({ ...formValid,\n          [name]: emailValidate(e.target)\n        });\n        break;\n\n      case \"password\":\n        setFormValid({ ...formValid,\n          [name]: minLengthValidations(e.target, 6)\n        });\n        break;\n\n      case \"checkbox\":\n        setFormValid({ ...formValid,\n          [name]: e.target.checked\n        });\n        break;\n    }\n\n    console.log(formValid);\n  };\n\n  const register = async e => {\n    e.preventDefault(); //const {email, password, repeatPassword, privacyPolicie} = formValid;\n\n    const passValid = state.password;\n    const repatePassValid = state.repeatPassword;\n\n    if (!state.email || !state.privacyPolicie || !passValid || !repatePassValid) {\n      notification[\"error\"]({\n        message: \"Todos los campos son obligatorios\"\n      });\n    } else {\n      if (passValid !== repatePassValid) {\n        notification[\"error\"]({\n          message: \"Las contraseÃ±as tienen que ser iguales\"\n        });\n      } else {\n        /*notification[\"success\"]({\r\n            message: \"Usuario creado\"\r\n        });*/\n        const result = await signUpApi(state);\n\n        if (!result.ok) {\n          notification[\"error\"]({\n            message: result.message\n          });\n        } else {\n          notification[\"success\"]({\n            message: result.message\n          });\n          cleanInput();\n        }\n      }\n    } //console.log(formValid);\n\n  };\n\n  const cleanInput = () => {\n    const inputs = document.getElementsByTagName('input');\n\n    for (let i = 0; i < inputs.length; i++) {\n      inputs[i].classList.remove(\"sucess\");\n      inputs[i].classList.remove(\"error\");\n    }\n\n    setstate({\n      email: \"\",\n      password: \"\",\n      repeatPassword: \"\",\n      privacyPolicie: false\n    });\n    setFormValid({\n      email: false,\n      password: false,\n      repeatPassword: false,\n      privacyPolicie: false\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"register-form\",\n    onChange: changeForm,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {\n          style: {\n            color: \"rgba(0,0,0,.25)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 30\n        }, this),\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Correo electronico\",\n        className: \"register-form__input\",\n        onChange: changeValidation,\n        value: state.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {\n          style: {\n            color: \"rgba(0,0,0,.25)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 28\n        }, this),\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"contrase\\xF1a\",\n        className: \"register-form__input\",\n        onChange: changeValidation,\n        value: state.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 29\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {\n          style: {\n            color: \"rgba(0,0,0,.25)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 32\n        }, this),\n        type: \"password\",\n        name: \"repeatPassword\",\n        placeholder: \"repita la contrase\\xF1a\",\n        className: \"register-form__input\",\n        onChange: changeValidation,\n        value: state.repeatPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 33\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n        name: \"privacyPolicie\",\n        checked: state.privacyPolicie,\n        onChange: changeValidation,\n        children: \"He leido las politicas de seguridad \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 25\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 37\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"register-form__button\",\n        onClick: register,\n        children: \"Crear cuenta \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 25\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 37\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 14\n  }, this);\n}\n\n_s(RegisterForm, \"m8mfpICZpnpsiYogQnCVK2WuupU=\");\n\n_c = RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["C:/CURSOSUDEMY/PRACTICOS/CURSO MERN/ProyectoWebPersonal/web-personal-cliente/src/components/RegisterForm/RegisterForm.js"],"names":["React","useState","Form","Input","Button","Checkbox","notification","UserOutlined","LockOutlined","signUpApi","emailValidate","minLengthValidations","RegisterForm","state","setstate","email","password","repeatPassword","privacyPolicie","formValid","setFormValid","changeForm","e","target","name","checked","value","changeValidation","type","console","log","register","preventDefault","passValid","repatePassValid","message","result","ok","cleanInput","inputs","document","getElementsByTagName","i","length","classList","remove","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form, Input, Button, Checkbox, notification } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport \"./RegisterForm.scss\";\r\nimport { signUpApi } from \"../../api/user\";\r\nimport {\r\n    emailValidate,\r\n    minLengthValidations,\r\n} from \"../../utils/formValidation\";\r\nexport default function RegisterForm() {\r\n    const [state, setstate] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        repeatPassword: \"\",\r\n        privacyPolicie: false,\r\n    });\r\n\r\n    const [formValid, setFormValid] = useState({\r\n        email: false,\r\n        password: false,\r\n        repeatPassword: false,\r\n        privacyPolicie: false,\r\n    });\r\n\r\n    const changeForm = (e) => {\r\n        if (e.target.name === \"privacyPolicie\") {\r\n            setstate({\r\n                ...state,\r\n                [e.target.name]: e.target.checked,\r\n            });\r\n        } else {\r\n            setstate({\r\n                ...state,\r\n                [e.target.name]: e.target.value,\r\n            });\r\n        }\r\n    };\r\n\r\n    const changeValidation = (e) => {\r\n        const { type, name } = e.target;\r\n        // eslint-disable-next-line default-case\r\n        switch (type) {\r\n            case \"email\":\r\n                setFormValid({...formValid, [name]: emailValidate(e.target) });\r\n                break;\r\n            case \"password\":\r\n                setFormValid({...formValid, [name]: minLengthValidations(e.target, 6) });\r\n                break;\r\n            case \"checkbox\":\r\n                setFormValid({...formValid, [name]: e.target.checked });\r\n                break;\r\n        }\r\n        console.log(formValid);\r\n    };\r\n\r\n    const register = async(e) => {\r\n        e.preventDefault();\r\n        //const {email, password, repeatPassword, privacyPolicie} = formValid;\r\n        const passValid = state.password;\r\n        const repatePassValid = state.repeatPassword;\r\n        if (!state.email || !state.privacyPolicie || !passValid || !repatePassValid) {\r\n            notification[\"error\"]({\r\n                message: \"Todos los campos son obligatorios\"\r\n            });\r\n        } else {\r\n            if (passValid !== repatePassValid) {\r\n                notification[\"error\"]({\r\n                    message: \"Las contraseÃ±as tienen que ser iguales\"\r\n                });\r\n            } else {\r\n                /*notification[\"success\"]({\r\n                    message: \"Usuario creado\"\r\n                });*/\r\n                const result = await signUpApi(state);\r\n                if (!result.ok) {\r\n                    notification[\"error\"]({\r\n                        message: result.message\r\n                    });\r\n                } else {\r\n                    notification[\"success\"]({\r\n                        message: result.message\r\n                    })\r\n                    cleanInput();\r\n                }\r\n            }\r\n        }\r\n        //console.log(formValid);\r\n    };\r\n    const cleanInput = () => {\r\n        const inputs = document.getElementsByTagName('input');\r\n        for (let i = 0; i < inputs.length; i++) {\r\n            inputs[i].classList.remove(\"sucess\");\r\n            inputs[i].classList.remove(\"error\");\r\n        }\r\n\r\n        setstate({\r\n            email: \"\",\r\n            password: \"\",\r\n            repeatPassword: \"\",\r\n            privacyPolicie: false,\r\n        });\r\n        setFormValid({\r\n            email: false,\r\n            password: false,\r\n            repeatPassword: false,\r\n            privacyPolicie: false,\r\n        });\r\n    };\r\n    return ( <\r\n            Form className = \"register-form\"\r\n            onChange = { changeForm } >\r\n            <\r\n            Form.Item >\r\n            <\r\n            Input prefix = { < UserOutlined style = {\r\n                    { color: \"rgba(0,0,0,.25)\" } }\r\n                />}\r\n                type = \"email\"\r\n                name = \"email\"\r\n                placeholder = \"Correo electronico\"\r\n                className = \"register-form__input\"\r\n                onChange = { changeValidation }\r\n                value = { state.email }\r\n                /> <\r\n                /Form.Item> <\r\n                Form.Item >\r\n                <\r\n                Input\r\n                prefix = { < LockOutlined style = {\r\n                        { color: \"rgba(0,0,0,.25)\" } }\r\n                    />}\r\n                    type = \"password\"\r\n                    name = \"password\"\r\n                    placeholder = \"contraseÃ±a\"\r\n                    className = \"register-form__input\"\r\n                    onChange = { changeValidation }\r\n                    value = { state.password }\r\n                    /> <\r\n                    /Form.Item> <\r\n                    Form.Item >\r\n                    <\r\n                    Input\r\n                    prefix = { < LockOutlined style = {\r\n                            { color: \"rgba(0,0,0,.25)\" } }\r\n                        />}\r\n                        type = \"password\"\r\n                        name = \"repeatPassword\"\r\n                        placeholder = \"repita la contraseÃ±a\"\r\n                        className = \"register-form__input\"\r\n                        onChange = { changeValidation }\r\n                        value = { state.repeatPassword }\r\n                        /> <\r\n                        /Form.Item> <\r\n                        Form.Item >\r\n                        <\r\n                        Checkbox\r\n                        name = \"privacyPolicie\"\r\n                        checked = { state.privacyPolicie }\r\n                        onChange = { changeValidation } >\r\n                        He leido las politicas de seguridad <\r\n                        /Checkbox> <\r\n                        /Form.Item> <\r\n                        Form.Item >\r\n                        <\r\n                        Button className = \"register-form__button\"\r\n                        onClick = { register } >\r\n                        Crear cuenta <\r\n                        /Button> <\r\n                        /Form.Item> <\r\n                        /Form>\r\n                    );\r\n                }"]},"metadata":{},"sourceType":"module"}