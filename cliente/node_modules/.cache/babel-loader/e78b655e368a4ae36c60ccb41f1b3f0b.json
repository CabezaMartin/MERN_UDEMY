{"ast":null,"code":"import { basePath, apiVersion } from \"./config\";\nexport function signUpApi(data) {\n  const url = `${basePath}/${apiVersion}/sign-up`;\n  const params = {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }; //console.log(data)\n\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    if (result.user) {\n      return {\n        ok: 200,\n        message: \"Usuario creado correctamente\"\n      };\n    }\n\n    return {\n      ok: false,\n      message: result.message\n    };\n  }).catch(err => {\n    return {\n      ok: false,\n      message: err.message\n    };\n  });\n}\nexport function signInApi(data) {\n  const url = `${basePath}/${apiVersion}/sign-in`;\n  const params = {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return fetch(url, params).then(response => {\n    //console.log(Response);\n    return response.json();\n  }).then(result => {\n    //console.log('RESULT API SIGINIDAPI' + result);\n    return result;\n  }).catch(err => {\n    return {\n      ok: false,\n      message: err.message\n    };\n  });\n}\nexport function getUsersApi(token) {\n  const url = `${basePath}/${apiVersion}/users`;\n  const params = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"authorization\": token\n    }\n  };\n  return fetch(url, params).then(response => {\n    //console.log(Response);\n    return response.json();\n  }).then(result => {\n    //console.log('RESULT API SIGINIDAPI' + result);\n    return result;\n  }).catch(err => {\n    return {\n      ok: false,\n      message: err.message\n    };\n  });\n}\nexport function getUsersActiveApi(token, status) {\n  const url = `${basePath}/${apiVersion}/users-active?active=${status}`;\n  const params = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"authorization\": token\n    }\n  };\n  return fetch(url, params).then(response => {\n    //console.log(Response);\n    return response.json();\n  }).then(result => {\n    //console.log('RESULT API SIGINIDAPI' + result);\n    return result;\n  }).catch(err => {\n    return {\n      ok: false,\n      message: err.message\n    };\n  });\n}\nexport function uploadAvatarApi(data) {\n  const url = `${basePath}/${apiVersion}/edit-user`;\n  const params = {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }; //console.log(data)\n\n  return fetch(url, params).then(response => {\n    console.log(`1 ${response}`);\n    return response.json();\n  }).then(result => {\n    console.log(`2 ${result}`);\n\n    if (result.user) {\n      return {\n        ok: 200,\n        message: \"Usuario editado correctamente\"\n      };\n    }\n\n    return {\n      ok: false,\n      message: result.message\n    };\n  }).catch(err => {\n    return {\n      ok: false,\n      message: err.message\n    };\n  });\n}\nexport function updateUserApi(data) {\n  const url = `${basePath}/${apiVersion}/edit-user`;\n  const params = {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }; //console.log(data)\n\n  return fetch(url, params).then(response => {\n    console.log(`1 ${response}`);\n    return response.json();\n  }).then(result => {\n    console.log(`2 ${result}`);\n\n    if (result.user) {\n      return {\n        ok: 200,\n        message: \"Usuario editado correctamente\"\n      };\n    }\n\n    return {\n      ok: false,\n      message: result.message\n    };\n  }).catch(err => {\n    return {\n      ok: false,\n      message: err.message\n    };\n  });\n}\nexport function editUserApi(data) {\n  const url = `${basePath}/${apiVersion}/edit-user`;\n  const params = {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }; //console.log(data)\n\n  return fetch(url, params).then(response => {\n    console.log(`1 ${response}`);\n    return response.json();\n  }).then(result => {\n    console.log(`2 ${result}`);\n\n    if (result.user) {\n      return {\n        ok: 200,\n        message: \"Usuario editado correctamente\"\n      };\n    }\n\n    return {\n      ok: false,\n      message: result.message\n    };\n  }).catch(err => {\n    return {\n      ok: false,\n      message: err.message\n    };\n  });\n}","map":{"version":3,"sources":["C:/CURSOSUDEMY/PRACTICOS/CURSO MERN/ProyectoWebPersonal/web-personal-cliente/src/api/user.js"],"names":["basePath","apiVersion","signUpApi","data","url","params","method","body","JSON","stringify","headers","fetch","then","response","json","result","user","ok","message","catch","err","signInApi","getUsersApi","token","getUsersActiveApi","status","uploadAvatarApi","console","log","updateUserApi","editUserApi"],"mappings":"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","sourcesContent":["import { basePath, apiVersion } from \"./config\";\r\n\r\nexport function signUpApi(data) {\r\n    const url = `${basePath}/${apiVersion}/sign-up`;\r\n    const params = {\r\n        method: \"POST\",\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    };\r\n\r\n    //console.log(data)\r\n    return fetch(url, params)\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .then(result => {\r\n            if (result.user) {\r\n                return {\r\n                    ok: 200,\r\n                    message: \"Usuario creado correctamente\"\r\n                };\r\n            }\r\n            return {\r\n                ok: false,\r\n                message: result.message\r\n            }\r\n        }).catch(err => {\r\n            return { ok: false, message: err.message }\r\n        })\r\n}\r\n\r\nexport function signInApi(data) {\r\n    const url = `${basePath}/${apiVersion}/sign-in`;\r\n    const params = {\r\n        method: \"POST\",\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    };\r\n    return fetch(url, params)\r\n        .then(response => {\r\n            //console.log(Response);\r\n            return response.json();\r\n        })\r\n        .then(result => {\r\n            //console.log('RESULT API SIGINIDAPI' + result);\r\n            return result;\r\n        }).catch(err => {\r\n            return { ok: false, message: err.message }\r\n        })\r\n\r\n}\r\n\r\nexport function getUsersApi(token) {\r\n    const url = `${basePath}/${apiVersion}/users`;\r\n    const params = {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"authorization\": token\r\n        }\r\n    };\r\n    return fetch(url, params)\r\n        .then(response => {\r\n            //console.log(Response);\r\n            return response.json();\r\n        })\r\n        .then(result => {\r\n            //console.log('RESULT API SIGINIDAPI' + result);\r\n            return result;\r\n        }).catch(err => {\r\n            return { ok: false, message: err.message }\r\n        })\r\n\r\n}\r\n\r\nexport function getUsersActiveApi(token, status) {\r\n    const url = `${basePath}/${apiVersion}/users-active?active=${status}`;\r\n    const params = {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"authorization\": token\r\n        }\r\n    };\r\n    return fetch(url, params)\r\n        .then(response => {\r\n            //console.log(Response);\r\n            return response.json();\r\n        })\r\n        .then(result => {\r\n            //console.log('RESULT API SIGINIDAPI' + result);\r\n            return result;\r\n        }).catch(err => {\r\n            return { ok: false, message: err.message }\r\n        })\r\n\r\n}\r\n\r\nexport function uploadAvatarApi(data) {\r\n    const url = `${basePath}/${apiVersion}/edit-user`;\r\n    const params = {\r\n        method: \"POST\",\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    };\r\n\r\n    //console.log(data)\r\n    return fetch(url, params)\r\n        .then(response => {\r\n            console.log(`1 ${response}`);\r\n            return response.json();\r\n        })\r\n        .then(result => {\r\n            console.log(`2 ${result}`);\r\n            if (result.user) {\r\n                return {\r\n                    ok: 200,\r\n                    message: \"Usuario editado correctamente\"\r\n                };\r\n            }\r\n            return {\r\n                ok: false,\r\n                message: result.message\r\n            }\r\n        }).catch(err => {\r\n            return { ok: false, message: err.message }\r\n        })\r\n}\r\n\r\nexport function updateUserApi(data) {\r\n    const url = `${basePath}/${apiVersion}/edit-user`;\r\n    const params = {\r\n        method: \"POST\",\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    };\r\n\r\n    //console.log(data)\r\n    return fetch(url, params)\r\n        .then(response => {\r\n            console.log(`1 ${response}`);\r\n            return response.json();\r\n        })\r\n        .then(result => {\r\n            console.log(`2 ${result}`);\r\n            if (result.user) {\r\n                return {\r\n                    ok: 200,\r\n                    message: \"Usuario editado correctamente\"\r\n                };\r\n            }\r\n            return {\r\n                ok: false,\r\n                message: result.message\r\n            }\r\n        }).catch(err => {\r\n            return { ok: false, message: err.message }\r\n        })\r\n}\r\n\r\nexport function editUserApi(data) {\r\n    const url = `${basePath}/${apiVersion}/edit-user`;\r\n    const params = {\r\n        method: \"POST\",\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    };\r\n\r\n    //console.log(data)\r\n    return fetch(url, params)\r\n        .then(response => {\r\n            console.log(`1 ${response}`);\r\n            return response.json();\r\n        })\r\n        .then(result => {\r\n            console.log(`2 ${result}`);\r\n            if (result.user) {\r\n                return {\r\n                    ok: 200,\r\n                    message: \"Usuario editado correctamente\"\r\n                };\r\n            }\r\n            return {\r\n                ok: false,\r\n                message: result.message\r\n            }\r\n        }).catch(err => {\r\n            return { ok: false, message: err.message }\r\n        })\r\n}"]},"metadata":{},"sourceType":"module"}