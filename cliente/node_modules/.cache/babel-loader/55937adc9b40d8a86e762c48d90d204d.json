{"ast":null,"code":"var _jsxFileName = \"C:\\\\CURSOSUDEMY\\\\PRACTICOS\\\\CURSO MERN\\\\ProyectoWebPersonal\\\\web-personal-cliente\\\\src\\\\components\\\\RegisterForm\\\\RegisterForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Input, Button, Checkbox, notification } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport \"./RegisterForm.scss\";\nimport { emailValidate, minLengthValidations } from \"../../utils/formValidation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RegisterForm() {\n  _s();\n\n  const [state, setstate] = useState({\n    email: \"\",\n    password: \"\",\n    repeatPassword: \"\",\n    privacyPolicie: false\n  });\n  const [formValid, setFormValid] = useState({\n    email: false,\n    password: false,\n    repeatPassword: false,\n    privacyPolicie: false\n  });\n\n  const changeForm = e => {\n    if (e.target.name === \"privacyPolicie\") {\n      setstate({ ...state,\n        [e.target.name]: e.target.checked\n      });\n    } else {\n      setstate({ ...state,\n        [e.target.name]: e.target.value\n      });\n    }\n  };\n\n  const changeValidation = e => {\n    const {\n      type,\n      name\n    } = e.target; // eslint-disable-next-line default-case\n\n    switch (type) {\n      case \"email\":\n        setFormValid({ ...formValid,\n          [name]: emailValidate(e.target)\n        });\n        break;\n\n      case \"password\":\n        setFormValid({ ...formValid,\n          [name]: minLengthValidations(e.target, 6)\n        });\n        break;\n\n      case \"checkbox\":\n        setFormValid({ ...formValid,\n          [name]: e.target.checked\n        });\n        break;\n    }\n\n    console.log(formValid);\n  };\n\n  const register = e => {\n    e.preventDefault();\n    const {\n      email,\n      password,\n      repeatPassword,\n      privacyPolicie\n    } = formValid;\n    const passValid = state.password;\n    const repatePassValid = state.repeatPassword;\n\n    if (!state.email || !state.privacyPolicie || !passValid || !repatePassValid) {\n      notification[\"error\"]({\n        message: \"Todos los campos son obligatorios\"\n      });\n    } else {\n      if (passValid !== repatePassValid) {\n        notification[\"error\"]({\n          message: \"Las contrase√±as tienen que ser iguales\"\n        });\n      }\n    } //console.log(formValid);\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"register-form\",\n    onChange: changeForm,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {\n          style: {\n            color: \"rgba(0,0,0,.25)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 19\n        }, this),\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Correo electronico\",\n        className: \"register-form__input\",\n        onChange: changeValidation,\n        value: state.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {\n          style: {\n            color: \"rgba(0,0,0,.25)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 19\n        }, this),\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"contrase\\xF1a\",\n        className: \"register-form__input\",\n        onChange: changeValidation,\n        value: state.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {\n          style: {\n            color: \"rgba(0,0,0,.25)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 19\n        }, this),\n        type: \"password\",\n        name: \"repeatPassword\",\n        placeholder: \"repita la contrase\\xF1a\",\n        className: \"register-form__input\",\n        onChange: changeValidation,\n        value: state.repeatPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Checkbox, {\n        name: \"privacyPolicie\",\n        checked: state.privacyPolicie,\n        onChange: changeValidation,\n        children: \"He leido las politicas de seguridad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: \"register-form__button\",\n        onClick: register,\n        children: \"Crear cuenta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterForm, \"WTxYmeB7CD55mYi0bN2Ri5ITXq0=\");\n\n_c = RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["C:/CURSOSUDEMY/PRACTICOS/CURSO MERN/ProyectoWebPersonal/web-personal-cliente/src/components/RegisterForm/RegisterForm.js"],"names":["React","useState","Form","Input","Button","Checkbox","notification","UserOutlined","LockOutlined","emailValidate","minLengthValidations","RegisterForm","state","setstate","email","password","repeatPassword","privacyPolicie","formValid","setFormValid","changeForm","e","target","name","checked","value","changeValidation","type","console","log","register","preventDefault","passValid","repatePassValid","message","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form, Input, Button, Checkbox, notification } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport \"./RegisterForm.scss\";\r\nimport {\r\n  emailValidate,\r\n  minLengthValidations,\r\n} from \"../../utils/formValidation\";\r\nexport default function RegisterForm() {\r\n  const [state, setstate] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    repeatPassword: \"\",\r\n    privacyPolicie: false,\r\n  });\r\n\r\n  const [formValid, setFormValid] = useState({\r\n    email: false,\r\n    password: false,\r\n    repeatPassword: false,\r\n    privacyPolicie: false,\r\n  });\r\n\r\n  const changeForm = (e) => {\r\n    if (e.target.name === \"privacyPolicie\") {\r\n      setstate({\r\n        ...state,\r\n        [e.target.name]: e.target.checked,\r\n      });\r\n    } else {\r\n      setstate({\r\n        ...state,\r\n        [e.target.name]: e.target.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const changeValidation = (e) => {\r\n    const { type, name } = e.target;\r\n    // eslint-disable-next-line default-case\r\n    switch (type) {\r\n      case \"email\":\r\n        setFormValid({...formValid,[name]:emailValidate(e.target)});\r\n        break;\r\n      case \"password\":\r\n        setFormValid({...formValid,[name]: minLengthValidations(e.target, 6)});\r\n        break;\r\n      case \"checkbox\":\r\n        setFormValid({...formValid,[name]: e.target.checked});\r\n        break;\r\n    }\r\n    console.log(formValid);\r\n  };\r\n\r\n  const register = (e) => {\r\n    e.preventDefault();\r\n    const {email, password, repeatPassword, privacyPolicie} = formValid;\r\n    const passValid = state.password;\r\n    const repatePassValid = state.repeatPassword;\r\n    if(!state.email || !state.privacyPolicie || !passValid || !repatePassValid){\r\n        notification [\"error\"]({\r\n            message: \"Todos los campos son obligatorios\"\r\n        });\r\n    }else{\r\n        if(passValid!==repatePassValid){\r\n            notification[\"error\"]({\r\n                message: \"Las contrase√±as tienen que ser iguales\"\r\n            });\r\n        }\r\n    }\r\n    //console.log(formValid);\r\n  };\r\n\r\n  return (\r\n    <Form className=\"register-form\" onChange={changeForm}>\r\n      <Form.Item>\r\n        <Input\r\n          prefix={<UserOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Correo electronico\"\r\n          className=\"register-form__input\"\r\n          onChange={changeValidation}\r\n          value={state.email}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Input\r\n          prefix={<LockOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"contrase√±a\"\r\n          className=\"register-form__input\"\r\n          onChange={changeValidation}\r\n          value={state.password}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Input\r\n          prefix={<LockOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n          type=\"password\"\r\n          name=\"repeatPassword\"\r\n          placeholder=\"repita la contrase√±a\"\r\n          className=\"register-form__input\"\r\n          onChange={changeValidation}\r\n          value={state.repeatPassword}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Checkbox\r\n          name=\"privacyPolicie\"\r\n          checked={state.privacyPolicie}\r\n          onChange={changeValidation}\r\n        >\r\n          He leido las politicas de seguridad\r\n        </Checkbox>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button className=\"register-form__button\" onClick={register}>\r\n          Crear cuenta\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}