{"ast":null,"code":"var _jsxFileName = \"C:\\\\CURSOSUDEMY\\\\PRACTICOS\\\\CURSO MERN\\\\ProyectoWebPersonal\\\\web-personal-cliente\\\\src\\\\components\\\\Admin\\\\User\\\\ListUsers\\\\ListUsers.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./ListUsers.scss\";\nimport { EditOutlined, StopOutlined, DeleteOutlined, CheckOutlined } from \"@ant-design/icons\";\nimport { Switch, List, Button, Avatar, notification } from \"antd\";\nimport NoAvatar from \"../../../../assets/img/png/no-avatar.png\";\nimport Modal from \"../../../Admin/Modal\"; //import User from \"../../../../pages/Admin/Users/Users\";\n\nimport { getAvatarApi, activeDesactiveUserApi, deleteUserApi } from '../../../../api/user';\nimport EditUserForm from \"../../../../components/Admin/User/EditUserForm\";\nimport { getAccessToken } from \"../../../../api/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ListUsers(props) {\n  _s();\n\n  const [modalCollapsed, setmodalCollapsed] = useState(false);\n  const {\n    usersActive,\n    usersInactive,\n    setReloadUsers\n  } = props;\n  const [viewUsersActives, setViewUsersActives] = useState(true);\n  const [modalTitle, setModalTitle] = useState(\"\");\n  const [modalContent, setModalContent] = useState(null);\n  const token = getAccessToken();\n\n  const deleteUser = user => {\n    deleteUserApi(token, user._id).then(result => {\n      notification[\"success\"]({\n        message: result.message\n      });\n      setReloadUsers(true);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-users\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-users__switch\",\n      children: [/*#__PURE__*/_jsxDEV(Switch, {\n        defaultChecked: true,\n        onChange: () => setViewUsersActives(!viewUsersActives)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: viewUsersActives ? \"UsuariosActivos\" : \"Usuarios inactivos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), viewUsersActives ? /*#__PURE__*/_jsxDEV(UsersActive, {\n      usersActive: usersActive,\n      setmodalCollapsed: setmodalCollapsed,\n      modalCollapsed: modalCollapsed,\n      setModalTitle: setModalTitle,\n      setModalContent: setModalContent,\n      setReloadUsers: setReloadUsers,\n      deleteUser: deleteUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(UsersInactive, {\n      usersInactive: usersInactive,\n      setReloadUsers: setReloadUsers,\n      deleteUser: deleteUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: modalTitle,\n      isVisible: modalCollapsed,\n      setIsVisible: setmodalCollapsed,\n      children: modalContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ListUsers, \"BfLfHvEBFhdejnHJHENw8Cf9Mlw=\");\n\n_c = ListUsers;\n\nfunction UsersActive(props) {\n  const {\n    usersActive,\n    setmodalCollapsed,\n    modalCollapsed,\n    setModalContent,\n    setModalTitle,\n    setReloadUsers,\n    deleteUser\n  } = props;\n  const token = getAccessToken();\n\n  const editUser = user => {\n    //console.log(\"1.\"+user);\n    setmodalCollapsed(!modalCollapsed);\n    setModalTitle(`Editar ${user.name ? user.name : '...'} ${user.lastName ? user.lastName : '...'}`);\n    setModalContent( /*#__PURE__*/_jsxDEV(EditUserForm, {\n      user: user,\n      setmodalCollapsed: setmodalCollapsed,\n      setReloadUsers: setReloadUsers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }, this));\n  };\n\n  const desactiveUser = user => {\n    const body = {\n      \"active\": false\n    };\n    activeDesactiveUserApi(token, body, user._id).then(result => {\n      notification[\"success\"]({\n        message: result.message\n      });\n      setReloadUsers(true);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(List, {\n    className: \"users-active\",\n    itemLayout: \"horizontal\",\n    dataSource: usersActive,\n    renderItem: user => /*#__PURE__*/_jsxDEV(UserActive, {\n      user: user,\n      editUser: editUser,\n      desactiveUser: desactiveUser,\n      deleteUser: deleteUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = UsersActive;\n\nfunction UserActive(props) {\n  _s2();\n\n  const {\n    user,\n    editUser,\n    desactiveUser\n  } = props;\n  const [avatar, setAvatar] = useState(null);\n  useEffect(() => {\n    if (user.avatar) {\n      getAvatarApi(user.avatar).then(response => {\n        setAvatar(response);\n      });\n    } else {\n      setAvatar(null);\n    }\n  }, [avatar]);\n  return /*#__PURE__*/_jsxDEV(List.Item, {\n    actions: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: () => editUser(user),\n      children: /*#__PURE__*/_jsxDEV(EditOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"danger\",\n      onClick: () => desactiveUser(user),\n      children: /*#__PURE__*/_jsxDEV(StopOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"danger\",\n      onClick: () => console.log(\"Eliminar usuario\"),\n      children: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)],\n    children: /*#__PURE__*/_jsxDEV(List.Item.Meta, {\n      avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n        src: avatar ? avatar : NoAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }, this),\n      title: `\n                      ${user.name ? user.name : \"..\"}\n                      ${user.lastName ? user.lastName : \"...\"}\n                  `,\n      description: user.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(UserActive, \"X3aSP2TuZtJcozzJUSg2sRpN1Z4=\");\n\n_c3 = UserActive;\n\nfunction UsersInactive(props) {\n  const {\n    usersInactive,\n    setReloadUsers,\n    deleteUser\n  } = props;\n  const token = getAccessToken();\n\n  const activarUsuario = user => {\n    const body = {\n      \"active\": true\n    };\n    activeDesactiveUserApi(token, body, user._id).then(result => {\n      notification[\"success\"]({\n        message: result.message\n      });\n      setReloadUsers(true);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(List, {\n    className: \"users-active\",\n    itemLayout: \"horizontal\",\n    dataSource: usersInactive,\n    renderItem: user => /*#__PURE__*/_jsxDEV(UserInactive, {\n      user: user,\n      activarUsuario: activarUsuario\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 31\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 9\n  }, this);\n}\n\n_c4 = UsersInactive;\n\nfunction UserInactive(props) {\n  _s3();\n\n  const {\n    user,\n    activarUsuario\n  } = props;\n  const [avatar, setAvatar] = useState(null);\n  useEffect(() => {\n    if (user.avatar) {\n      getAvatarApi(user.avatar).then(response => {\n        setAvatar(response);\n      });\n    } else {\n      setAvatar(null);\n    }\n  }, [avatar]);\n  return /*#__PURE__*/_jsxDEV(List.Item, {\n    actions: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: () => activarUsuario(user),\n      children: /*#__PURE__*/_jsxDEV(CheckOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"danger\",\n      onClick: () => console.log(\"Eliminar usuario\"),\n      children: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)],\n    children: /*#__PURE__*/_jsxDEV(List.Item.Meta, {\n      avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n        src: avatar ? avatar : NoAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 15\n      }, this),\n      title: `\n                      ${user.name ? user.name : \"..\"}\n                      ${user.lastName ? user.lastName : \"...\"}\n                  `,\n      description: user.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(UserInactive, \"X3aSP2TuZtJcozzJUSg2sRpN1Z4=\");\n\n_c5 = UserInactive;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"ListUsers\");\n$RefreshReg$(_c2, \"UsersActive\");\n$RefreshReg$(_c3, \"UserActive\");\n$RefreshReg$(_c4, \"UsersInactive\");\n$RefreshReg$(_c5, \"UserInactive\");","map":{"version":3,"sources":["C:/CURSOSUDEMY/PRACTICOS/CURSO MERN/ProyectoWebPersonal/web-personal-cliente/src/components/Admin/User/ListUsers/ListUsers.js"],"names":["React","useState","useEffect","EditOutlined","StopOutlined","DeleteOutlined","CheckOutlined","Switch","List","Button","Avatar","notification","NoAvatar","Modal","getAvatarApi","activeDesactiveUserApi","deleteUserApi","EditUserForm","getAccessToken","ListUsers","props","modalCollapsed","setmodalCollapsed","usersActive","usersInactive","setReloadUsers","viewUsersActives","setViewUsersActives","modalTitle","setModalTitle","modalContent","setModalContent","token","deleteUser","user","_id","then","result","message","UsersActive","editUser","name","lastName","desactiveUser","body","UserActive","avatar","setAvatar","response","console","log","email","UsersInactive","activarUsuario","UserInactive"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAO,kBAAP;AACA,SAASC,YAAT,EAAsBC,YAAtB,EAAmCC,cAAnC,EAAmDC,aAAnD,QAA0E,mBAA1E;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,MAAvB,EAA+BC,MAA/B,EAAuCC,YAAvC,QAA2D,MAA3D;AACA,OAAOC,QAAP,MAAqB,0CAArB;AACA,OAAOC,KAAP,MAAkB,sBAAlB,C,CACA;;AACA,SAAQC,YAAR,EAAqBC,sBAArB,EAA4CC,aAA5C,QAAgE,sBAAhE;AACA,OAAOC,YAAP,MAAyB,gDAAzB;AACA,SAASC,cAAT,QAA+B,sBAA/B;;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACvC,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCrB,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM;AAAEsB,IAAAA,WAAF;AAAeC,IAAAA,aAAf;AAA6BC,IAAAA;AAA7B,MAAgDL,KAAtD;AACA,QAAM,CAACM,gBAAD,EAAmBC,mBAAnB,IAA0C1B,QAAQ,CAAC,IAAD,CAAxD;AACA,QAAM,CAAC2B,UAAD,EAAaC,aAAb,IAA+B5B,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM,CAAC6B,YAAD,EAAeC,eAAf,IAAmC9B,QAAQ,CAAC,IAAD,CAAjD;AACA,QAAM+B,KAAK,GAAGd,cAAc,EAA5B;;AAEA,QAAMe,UAAU,GAAGC,IAAI,IAAG;AACxBlB,IAAAA,aAAa,CAACgB,KAAD,EAAQE,IAAI,CAACC,GAAb,CAAb,CAA+BC,IAA/B,CAAqCC,MAAD,IAAY;AAC9C1B,MAAAA,YAAY,CAAC,SAAD,CAAZ,CAAwB;AACtB2B,QAAAA,OAAO,EAAED,MAAM,CAACC;AADM,OAAxB;AAGAb,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD,KALD;AAMD,GAPD;;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACE,QAAC,MAAD;AACE,QAAA,cAAc,MADhB;AAEE,QAAA,QAAQ,EAAE,MAAME,mBAAmB,CAAC,CAACD,gBAAF;AAFrC;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA,kBACGA,gBAAgB,GAAG,iBAAH,GAAuB;AAD1C;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAUGA,gBAAgB,gBACf,QAAC,WAAD;AACI,MAAA,WAAW,EAAEH,WADjB;AAEI,MAAA,iBAAiB,EAAID,iBAFzB;AAGI,MAAA,cAAc,EAAID,cAHtB;AAII,MAAA,aAAa,EAAIQ,aAJrB;AAKI,MAAA,eAAe,EAAIE,eALvB;AAMI,MAAA,cAAc,EAAIN,cANtB;AAOI,MAAA,UAAU,EAAIQ;AAPlB;AAAA;AAAA;AAAA;AAAA,YADe,gBAYf,QAAC,aAAD;AACE,MAAA,aAAa,EAAIT,aADnB;AAEE,MAAA,cAAc,EAAEC,cAFlB;AAGE,MAAA,UAAU,EAAIQ;AAHhB;AAAA;AAAA;AAAA;AAAA,YAtBJ,eA4BE,QAAC,KAAD;AACE,MAAA,KAAK,EAAEL,UADT;AAEE,MAAA,SAAS,EAAEP,cAFb;AAGE,MAAA,YAAY,EAAEC,iBAHhB;AAAA,gBAKIQ;AALJ;AAAA;AAAA;AAAA;AAAA,YA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD;;GAvDuBX,S;;KAAAA,S;;AAyDxB,SAASoB,WAAT,CAAqBnB,KAArB,EAA4B;AAC1B,QAAM;AAAEG,IAAAA,WAAF;AAAeD,IAAAA,iBAAf;AAAkCD,IAAAA,cAAlC;AAAiDU,IAAAA,eAAjD;AACHF,IAAAA,aADG;AACWJ,IAAAA,cADX;AAC0BQ,IAAAA;AAD1B,MAEAb,KAFN;AAGE,QAAMY,KAAK,GAAGd,cAAc,EAA5B;;AACA,QAAMsB,QAAQ,GAAGN,IAAI,IAAG;AACpB;AACAZ,IAAAA,iBAAiB,CAAC,CAACD,cAAF,CAAjB;AACAQ,IAAAA,aAAa,CAAE,UAASK,IAAI,CAACO,IAAL,GAAYP,IAAI,CAACO,IAAjB,GAAwB,KAAM,IAAGP,IAAI,CAACQ,QAAL,GAAgBR,IAAI,CAACQ,QAArB,GAAgC,KAAM,EAAlF,CAAb;AACAX,IAAAA,eAAe,eAAC,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEG,IAApB;AACb,MAAA,iBAAiB,EAAEZ,iBADN;AAEb,MAAA,cAAc,EAAEG;AAFH;AAAA;AAAA;AAAA;AAAA,YAAD,CAAf;AAGH,GAPD;;AASA,QAAMkB,aAAa,GAAGT,IAAI,IAAG;AAC3B,UAAMU,IAAI,GAAG;AACX,gBAAS;AADE,KAAb;AAGA7B,IAAAA,sBAAsB,CAACiB,KAAD,EAAOY,IAAP,EAAaV,IAAI,CAACC,GAAlB,CAAtB,CAA6CC,IAA7C,CAAmDC,MAAD,IAAY;AAC5D1B,MAAAA,YAAY,CAAC,SAAD,CAAZ,CAAwB;AACtB2B,QAAAA,OAAO,EAAED,MAAM,CAACC;AADM,OAAxB;AAGAb,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD,KALD;AAMD,GAVD;;AAYF,sBACE,QAAC,IAAD;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,UAAU,EAAC,YAFb;AAGE,IAAA,UAAU,EAAEF,WAHd;AAIE,IAAA,UAAU,EAAEW,IAAI,iBAChB,QAAC,UAAD;AACE,MAAA,IAAI,EAAEA,IADR;AAEE,MAAA,QAAQ,EAAEM,QAFZ;AAGE,MAAA,aAAa,EAAEG,aAHjB;AAIE,MAAA,UAAU,EAAEV;AAJd;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;MAvCQM,W;;AAyCT,SAASM,UAAT,CAAoBzB,KAApB,EAA0B;AAAA;;AACxB,QAAM;AAACc,IAAAA,IAAD;AAAOM,IAAAA,QAAP;AAAgBG,IAAAA;AAAhB,MAAiCvB,KAAvC;AACA,QAAM,CAAC0B,MAAD,EAASC,SAAT,IAAsB9C,QAAQ,CAAC,IAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGgC,IAAI,CAACY,MAAR,EAAe;AACbhC,MAAAA,YAAY,CAACoB,IAAI,CAACY,MAAN,CAAZ,CAA0BV,IAA1B,CAA+BY,QAAQ,IAAE;AACvCD,QAAAA,SAAS,CAACC,QAAD,CAAT;AACD,OAFD;AAGD,KAJD,MAIK;AACHD,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD;AACF,GARQ,EAQP,CAACD,MAAD,CARO,CAAT;AAWA,sBACE,QAAC,IAAD,CAAM,IAAN;AACA,IAAA,OAAO,EAAE,cACP,QAAC,MAAD;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,OAAO,EAAE,MAAMN,QAAQ,CAACN,IAAD,CAFzB;AAAA,6BAIE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,YADO,eAOP,QAAC,MAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,OAAO,EAAE,MAAMS,aAAa,CAACT,IAAD,CAF9B;AAAA,6BAIE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,YAPO,eAaP,QAAC,MAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,OAAO,EAAE,MAAMe,OAAO,CAACC,GAAR,CAAY,kBAAZ,CAFjB;AAAA,6BAIE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,YAbO,CADT;AAAA,2BAsBA,QAAC,IAAD,CAAM,IAAN,CAAW,IAAX;AACE,MAAA,MAAM,eAAE,QAAC,MAAD;AAAQ,QAAA,GAAG,EAAEJ,MAAM,GAAGA,MAAH,GAAYlC;AAA/B;AAAA;AAAA;AAAA;AAAA,cADV;AAEE,MAAA,KAAK,EAAG;AACd,wBAAwBsB,IAAI,CAACO,IAAL,GAAYP,IAAI,CAACO,IAAjB,GAAwB,IAAK;AACrD,wBAAwBP,IAAI,CAACQ,QAAL,GAAgBR,IAAI,CAACQ,QAArB,GAAgC,KAAM;AAC9D,mBALI;AAME,MAAA,WAAW,EAAER,IAAI,CAACiB;AANpB;AAAA;AAAA;AAAA;AAAA;AAtBA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD;;IAhDQN,U;;MAAAA,U;;AAkDT,SAASO,aAAT,CAAuBhC,KAAvB,EAA8B;AAC1B,QAAM;AAAEI,IAAAA,aAAF;AAAgBC,IAAAA,cAAhB;AAA+BQ,IAAAA;AAA/B,MAA8Cb,KAApD;AACA,QAAMY,KAAK,GAAGd,cAAc,EAA5B;;AACA,QAAMmC,cAAc,GAAGnB,IAAI,IAAG;AAC5B,UAAMU,IAAI,GAAG;AACX,gBAAS;AADE,KAAb;AAGA7B,IAAAA,sBAAsB,CAACiB,KAAD,EAAOY,IAAP,EAAaV,IAAI,CAACC,GAAlB,CAAtB,CAA6CC,IAA7C,CAAmDC,MAAD,IAAY;AAC5D1B,MAAAA,YAAY,CAAC,SAAD,CAAZ,CAAwB;AACtB2B,QAAAA,OAAO,EAAED,MAAM,CAACC;AADM,OAAxB;AAGAb,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD,KALD;AAMD,GAVD;;AAYA,sBACI,QAAC,IAAD;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,UAAU,EAAC,YAFb;AAGE,IAAA,UAAU,EAAED,aAHd;AAIE,IAAA,UAAU,EAAEU,IAAI,iBAAI,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEA,IAApB;AAA0B,MAAA,cAAc,EAAEmB;AAA1C;AAAA;AAAA;AAAA;AAAA;AAJtB;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;MAvBQD,a;;AAyBT,SAASE,YAAT,CAAsBlC,KAAtB,EAA4B;AAAA;;AAC1B,QAAM;AAACc,IAAAA,IAAD;AAAMmB,IAAAA;AAAN,MAAwBjC,KAA9B;AACA,QAAM,CAAC0B,MAAD,EAASC,SAAT,IAAsB9C,QAAQ,CAAC,IAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGgC,IAAI,CAACY,MAAR,EAAe;AACbhC,MAAAA,YAAY,CAACoB,IAAI,CAACY,MAAN,CAAZ,CAA0BV,IAA1B,CAA+BY,QAAQ,IAAE;AACvCD,QAAAA,SAAS,CAACC,QAAD,CAAT;AACD,OAFD;AAGD,KAJD,MAIK;AACHD,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD;AACF,GARQ,EAQP,CAACD,MAAD,CARO,CAAT;AAUA,sBACE,QAAC,IAAD,CAAM,IAAN;AACA,IAAA,OAAO,EAAE,cACP,QAAC,MAAD;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,OAAO,EAAE,MAAMO,cAAc,CAACnB,IAAD,CAF/B;AAAA,6BAIE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,YADO,eAOP,QAAC,MAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,OAAO,EAAE,MAAMe,OAAO,CAACC,GAAR,CAAY,kBAAZ,CAFjB;AAAA,6BAIE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,YAPO,CADT;AAAA,2BAgBA,QAAC,IAAD,CAAM,IAAN,CAAW,IAAX;AACE,MAAA,MAAM,eAAE,QAAC,MAAD;AAAQ,QAAA,GAAG,EAAEJ,MAAM,GAAGA,MAAH,GAAYlC;AAA/B;AAAA;AAAA;AAAA;AAAA,cADV;AAEE,MAAA,KAAK,EAAG;AACd,wBAAwBsB,IAAI,CAACO,IAAL,GAAYP,IAAI,CAACO,IAAjB,GAAwB,IAAK;AACrD,wBAAwBP,IAAI,CAACQ,QAAL,GAAgBR,IAAI,CAACQ,QAArB,GAAgC,KAAM;AAC9D,mBALI;AAME,MAAA,WAAW,EAAER,IAAI,CAACiB;AANpB;AAAA;AAAA;AAAA;AAAA;AAhBA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;IAzCQG,Y;;MAAAA,Y","sourcesContent":["import React, { useState,useEffect } from \"react\";\r\nimport \"./ListUsers.scss\";\r\nimport { EditOutlined,StopOutlined,DeleteOutlined, CheckOutlined   } from \"@ant-design/icons\";\r\nimport { Switch, List, Button, Avatar, notification } from \"antd\";\r\nimport NoAvatar from \"../../../../assets/img/png/no-avatar.png\";\r\nimport Modal from \"../../../Admin/Modal\";\r\n//import User from \"../../../../pages/Admin/Users/Users\";\r\nimport {getAvatarApi,activeDesactiveUserApi,deleteUserApi} from '../../../../api/user';\r\nimport EditUserForm from \"../../../../components/Admin/User/EditUserForm\";\r\nimport { getAccessToken } from \"../../../../api/auth\";\r\n\r\nexport default function ListUsers(props) {\r\n  const [modalCollapsed, setmodalCollapsed] = useState(false);\r\n  const { usersActive, usersInactive,setReloadUsers } = props;\r\n  const [viewUsersActives, setViewUsersActives] = useState(true);\r\n  const [modalTitle, setModalTitle] =  useState(\"\");\r\n  const [modalContent, setModalContent] =  useState(null);\r\n  const token = getAccessToken();\r\n\r\n  const deleteUser = user =>{\r\n    deleteUserApi(token, user._id).then((result) => {\r\n      notification[\"success\"]({\r\n        message: result.message,\r\n      });\r\n      setReloadUsers(true)\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"list-users\">\r\n      <div className=\"list-users__switch\">\r\n        <Switch\r\n          defaultChecked\r\n          onChange={() => setViewUsersActives(!viewUsersActives)}\r\n        />\r\n        <span>\r\n          {viewUsersActives ? \"UsuariosActivos\" : \"Usuarios inactivos\"}\r\n        </span>\r\n      </div>\r\n      {viewUsersActives ? (\r\n        <UsersActive \r\n            usersActive={usersActive} \r\n            setmodalCollapsed = {setmodalCollapsed}\r\n            modalCollapsed = {modalCollapsed}\r\n            setModalTitle = {setModalTitle}\r\n            setModalContent = {setModalContent}\r\n            setReloadUsers = {setReloadUsers}\r\n            deleteUser = {deleteUser}\r\n\r\n        />\r\n      ) : (\r\n        <UsersInactive \r\n          usersInactive = {usersInactive}\r\n          setReloadUsers={setReloadUsers}\r\n          deleteUser = {deleteUser} />\r\n      )}\r\n\r\n      <Modal\r\n        title={modalTitle}\r\n        isVisible={modalCollapsed}\r\n        setIsVisible={setmodalCollapsed}\r\n      >\r\n         {modalContent}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction UsersActive(props) {\r\n  const { usersActive, setmodalCollapsed, modalCollapsed,setModalContent,\r\n     setModalTitle,setReloadUsers,deleteUser\r\n    } = props;\r\n    const token = getAccessToken();\r\n    const editUser = user =>{\r\n        //console.log(\"1.\"+user);\r\n        setmodalCollapsed(!modalCollapsed)\r\n        setModalTitle(`Editar ${user.name ? user.name : '...'} ${user.lastName ? user.lastName : '...'}`);\r\n        setModalContent(<EditUserForm user={user}\r\n           setmodalCollapsed={setmodalCollapsed}\r\n           setReloadUsers={setReloadUsers}/>);\r\n    }\r\n\r\n    const desactiveUser = user =>{\r\n      const body = {\r\n        \"active\":false\r\n      };\r\n      activeDesactiveUserApi(token,body, user._id).then((result) => {\r\n        notification[\"success\"]({\r\n          message: result.message,\r\n        });\r\n        setReloadUsers(true)\r\n      });\r\n    }\r\n    \r\n  return (\r\n    <List\r\n      className=\"users-active\"\r\n      itemLayout=\"horizontal\"\r\n      dataSource={usersActive}\r\n      renderItem={user => \r\n      <UserActive \r\n        user={user} \r\n        editUser={editUser} \r\n        desactiveUser={desactiveUser}\r\n        deleteUser={deleteUser}/>}\r\n    />\r\n  );\r\n}\r\n\r\nfunction UserActive(props){\r\n  const {user, editUser,desactiveUser} = props;\r\n  const [avatar, setAvatar] = useState(null);\r\n\r\n  useEffect(()=>{\r\n    if(user.avatar){\r\n      getAvatarApi(user.avatar).then(response=>{\r\n        setAvatar(response);\r\n      })\r\n    }else{\r\n      setAvatar(null);\r\n    }\r\n  },[avatar]);\r\n\r\n\r\n  return(\r\n    <List.Item\r\n    actions={[\r\n      <Button\r\n        type=\"primary\"\r\n        onClick={() => editUser(user)}\r\n      >\r\n        <EditOutlined />\r\n      </Button>,\r\n      <Button\r\n        type=\"danger\"\r\n        onClick={() => desactiveUser(user)}\r\n      >\r\n        <StopOutlined  />\r\n      </Button>,\r\n      <Button\r\n        type=\"danger\"\r\n        onClick={() => console.log(\"Eliminar usuario\")}\r\n      >\r\n        <DeleteOutlined  />\r\n      </Button>,\r\n    ]}\r\n  >\r\n    <List.Item.Meta\r\n      avatar={<Avatar src={avatar ? avatar : NoAvatar} />}\r\n      title={`\r\n                      ${user.name ? user.name : \"..\"}\r\n                      ${user.lastName ? user.lastName : \"...\"}\r\n                  `}\r\n      description={user.email}\r\n    />\r\n  </List.Item>\r\n  );\r\n}\r\n\r\nfunction UsersInactive(props) {\r\n    const { usersInactive,setReloadUsers,deleteUser } = props;\r\n    const token = getAccessToken();\r\n    const activarUsuario = user =>{\r\n      const body = {\r\n        \"active\":true\r\n      };\r\n      activeDesactiveUserApi(token,body, user._id).then((result) => {\r\n        notification[\"success\"]({\r\n          message: result.message,\r\n        });\r\n        setReloadUsers(true)\r\n      });\r\n    }\r\n\r\n    return (\r\n        <List\r\n          className=\"users-active\"\r\n          itemLayout=\"horizontal\"\r\n          dataSource={usersInactive}\r\n          renderItem={user => <UserInactive user={user} activarUsuario={activarUsuario}/>}\r\n        />\r\n      );\r\n}\r\n\r\nfunction UserInactive(props){\r\n  const {user,activarUsuario} = props;\r\n  const [avatar, setAvatar] = useState(null);\r\n\r\n  useEffect(()=>{\r\n    if(user.avatar){\r\n      getAvatarApi(user.avatar).then(response=>{\r\n        setAvatar(response);\r\n      })\r\n    }else{\r\n      setAvatar(null);\r\n    }\r\n  },[avatar]);  \r\n\r\n  return (\r\n    <List.Item\r\n    actions={[\r\n      <Button\r\n        type=\"primary\"\r\n        onClick={() => activarUsuario(user)}\r\n      >\r\n        <CheckOutlined />\r\n      </Button>,\r\n      <Button\r\n        type=\"danger\"\r\n        onClick={() => console.log(\"Eliminar usuario\")}\r\n      >\r\n        <DeleteOutlined  />\r\n      </Button>,\r\n    ]}\r\n  >\r\n    <List.Item.Meta\r\n      avatar={<Avatar src={avatar ? avatar : NoAvatar} />}\r\n      title={`\r\n                      ${user.name ? user.name : \"..\"}\r\n                      ${user.lastName ? user.lastName : \"...\"}\r\n                  `}\r\n      description={user.email}\r\n    />\r\n  </List.Item>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}