{"ast":null,"code":"var _jsxFileName = \"C:\\\\CURSOSUDEMY\\\\PRACTICOS\\\\CURSO MERN\\\\ProyectoWebPersonal\\\\web-personal-cliente\\\\src\\\\components\\\\Admin\\\\User\\\\ListUsers\\\\ListUsers.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./ListUsers.scss\";\nimport { EditOutlined, StopOutlined, DeleteOutlined, CheckOutlined, UserAddOutlined } from \"@ant-design/icons\";\nimport { Switch, List, Button, Avatar, notification, Modal as ModalAntd } from \"antd\";\nimport NoAvatar from \"../../../../assets/img/png/no-avatar.png\";\nimport Modal from \"../../../Admin/Modal\"; //import User from \"../../../../pages/Admin/Users/Users\";\n\nimport { getAvatarApi, activeDesactiveUserApi, deleteUserApi } from '../../../../api/user';\nimport EditUserForm from \"../../../../components/Admin/User/EditUserForm\";\nimport { getAccessToken } from \"../../../../api/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  confirm\n} = ModalAntd;\nexport default function ListUsers(props) {\n  _s();\n\n  const [modalCollapsed, setmodalCollapsed] = useState(false);\n  const {\n    usersActive,\n    usersInactive,\n    setReloadUsers\n  } = props;\n  const [viewUsersActives, setViewUsersActives] = useState(true);\n  const [modalTitle, setModalTitle] = useState(\"\");\n  const [modalContent, setModalContent] = useState(null);\n  const token = getAccessToken();\n  /***********Elmiminar usuario con notification Confirm***************\r\n    const deleteUser = user =>{\r\n      const close1 = (user,b) => {\r\n        if(b){\r\n          deleteUserApi(token, user._id).then((result) => {\r\n            notification[\"success\"]({\r\n              message: result.message,\r\n            });\r\n            setReloadUsers(true)\r\n          });\r\n        }\r\n      };\r\n      const key = `open${Date.now()}`;\r\n      const btn = (\r\n        <Button type=\"primary\" \r\n        size=\"small\" \r\n        onClick={() => close1(user,true)}>\r\n          Confirmar\r\n        </Button>\r\n      );\r\n      notification.open({\r\n        message: 'Eliminar usuario',\r\n        description:\r\n          'Desea eliminar el usuario?',\r\n        btn,\r\n        key,\r\n        onClose: close1(user,false),\r\n      });\r\n    }\r\n  ***************************************************/\n\n  /**********Eliminar usuario Modal Antd*****************/\n\n  const deleteUser = user => {\n    confirm({\n      title: \"Eliminar Usuario\",\n      content: \"Desea eliminar?\",\n      okText: \"Eliminar\",\n      okType: \"danger\",\n      cancelText: \"Cancelar\",\n\n      onOk() {\n        deleteUserApi(token, user._id).then(result => {\n          notification[\"success\"]({\n            message: result.message\n          });\n          setReloadUsers(true);\n        });\n      }\n\n    });\n  };\n  /***************************************************/\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-users\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-users__switch\",\n      children: [/*#__PURE__*/_jsxDEV(Switch, {\n        defaultChecked: true,\n        onChange: () => setViewUsersActives(!viewUsersActives)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: viewUsersActives ? \"UsuariosActivos\" : \"Usuarios inactivos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-users__btn-add-user\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: () => {\n            console.log('Hola');\n          },\n          children: [/*#__PURE__*/_jsxDEV(UserAddOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), \"Nuevo usuario\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), viewUsersActives ? /*#__PURE__*/_jsxDEV(UsersActive, {\n      usersActive: usersActive,\n      setmodalCollapsed: setmodalCollapsed,\n      modalCollapsed: modalCollapsed,\n      setModalTitle: setModalTitle,\n      setModalContent: setModalContent,\n      setReloadUsers: setReloadUsers,\n      deleteUser: deleteUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(UsersInactive, {\n      usersInactive: usersInactive,\n      setReloadUsers: setReloadUsers,\n      deleteUser: deleteUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: modalTitle,\n      isVisible: modalCollapsed,\n      setIsVisible: setmodalCollapsed,\n      children: modalContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ListUsers, \"BfLfHvEBFhdejnHJHENw8Cf9Mlw=\");\n\n_c = ListUsers;\n\nfunction UsersActive(props) {\n  const {\n    usersActive,\n    setmodalCollapsed,\n    modalCollapsed,\n    setModalContent,\n    setModalTitle,\n    setReloadUsers,\n    deleteUser\n  } = props;\n  const token = getAccessToken();\n\n  const editUser = user => {\n    //console.log(\"1.\"+user);\n    setmodalCollapsed(!modalCollapsed);\n    setModalTitle(`Editar ${user.name ? user.name : '...'} ${user.lastName ? user.lastName : '...'}`);\n    setModalContent( /*#__PURE__*/_jsxDEV(EditUserForm, {\n      user: user,\n      setmodalCollapsed: setmodalCollapsed,\n      setReloadUsers: setReloadUsers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }, this));\n  };\n\n  const desactiveUser = user => {\n    const body = {\n      \"active\": false\n    };\n    activeDesactiveUserApi(token, body, user._id).then(result => {\n      notification[\"success\"]({\n        message: result.message\n      });\n      setReloadUsers(true);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(List, {\n    className: \"users-active\",\n    itemLayout: \"horizontal\",\n    dataSource: usersActive,\n    renderItem: user => /*#__PURE__*/_jsxDEV(UserActive, {\n      user: user,\n      editUser: editUser,\n      desactiveUser: desactiveUser,\n      deleteUser: deleteUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = UsersActive;\n\nfunction UserActive(props) {\n  _s2();\n\n  const {\n    user,\n    editUser,\n    desactiveUser,\n    deleteUser\n  } = props;\n  const [avatar, setAvatar] = useState(null);\n  useEffect(() => {\n    if (user.avatar) {\n      getAvatarApi(user.avatar).then(response => {\n        setAvatar(response);\n      });\n    } else {\n      setAvatar(null);\n    }\n  }, [avatar]);\n  return /*#__PURE__*/_jsxDEV(List.Item, {\n    actions: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: () => editUser(user),\n      children: /*#__PURE__*/_jsxDEV(EditOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"danger\",\n      onClick: () => desactiveUser(user),\n      children: /*#__PURE__*/_jsxDEV(StopOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"danger\",\n      onClick: () => deleteUser(user),\n      children: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)],\n    children: /*#__PURE__*/_jsxDEV(List.Item.Meta, {\n      avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n        src: avatar ? avatar : NoAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 15\n      }, this),\n      title: `\n                      ${user.name ? user.name : \"..\"}\n                      ${user.lastName ? user.lastName : \"...\"}\n                  `,\n      description: user.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(UserActive, \"X3aSP2TuZtJcozzJUSg2sRpN1Z4=\");\n\n_c3 = UserActive;\n\nfunction UsersInactive(props) {\n  const {\n    usersInactive,\n    setReloadUsers,\n    deleteUser\n  } = props;\n  const token = getAccessToken();\n\n  const activarUsuario = user => {\n    const body = {\n      \"active\": true\n    };\n    activeDesactiveUserApi(token, body, user._id).then(result => {\n      notification[\"success\"]({\n        message: result.message\n      });\n      setReloadUsers(true);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(List, {\n    className: \"users-active\",\n    itemLayout: \"horizontal\",\n    dataSource: usersInactive,\n    renderItem: user => /*#__PURE__*/_jsxDEV(UserInactive, {\n      user: user,\n      activarUsuario: activarUsuario,\n      deleteUser: deleteUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 9\n  }, this);\n}\n\n_c4 = UsersInactive;\n\nfunction UserInactive(props) {\n  _s3();\n\n  const {\n    user,\n    activarUsuario,\n    deleteUser\n  } = props;\n  const [avatar, setAvatar] = useState(null);\n  useEffect(() => {\n    if (user.avatar) {\n      getAvatarApi(user.avatar).then(response => {\n        setAvatar(response);\n      });\n    } else {\n      setAvatar(null);\n    }\n  }, [avatar]);\n  return /*#__PURE__*/_jsxDEV(List.Item, {\n    actions: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: () => activarUsuario(user),\n      children: /*#__PURE__*/_jsxDEV(CheckOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"danger\",\n      onClick: () => deleteUser(user),\n      children: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this)],\n    children: /*#__PURE__*/_jsxDEV(List.Item.Meta, {\n      avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n        src: avatar ? avatar : NoAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 15\n      }, this),\n      title: `\n                      ${user.name ? user.name : \"..\"}\n                      ${user.lastName ? user.lastName : \"...\"}\n                  `,\n      description: user.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(UserInactive, \"X3aSP2TuZtJcozzJUSg2sRpN1Z4=\");\n\n_c5 = UserInactive;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"ListUsers\");\n$RefreshReg$(_c2, \"UsersActive\");\n$RefreshReg$(_c3, \"UserActive\");\n$RefreshReg$(_c4, \"UsersInactive\");\n$RefreshReg$(_c5, \"UserInactive\");","map":{"version":3,"sources":["C:/CURSOSUDEMY/PRACTICOS/CURSO MERN/ProyectoWebPersonal/web-personal-cliente/src/components/Admin/User/ListUsers/ListUsers.js"],"names":["React","useState","useEffect","EditOutlined","StopOutlined","DeleteOutlined","CheckOutlined","UserAddOutlined","Switch","List","Button","Avatar","notification","Modal","ModalAntd","NoAvatar","getAvatarApi","activeDesactiveUserApi","deleteUserApi","EditUserForm","getAccessToken","confirm","ListUsers","props","modalCollapsed","setmodalCollapsed","usersActive","usersInactive","setReloadUsers","viewUsersActives","setViewUsersActives","modalTitle","setModalTitle","modalContent","setModalContent","token","deleteUser","user","title","content","okText","okType","cancelText","onOk","_id","then","result","message","console","log","UsersActive","editUser","name","lastName","desactiveUser","body","UserActive","avatar","setAvatar","response","email","UsersInactive","activarUsuario","UserInactive"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from \"react\";\r\nimport \"./ListUsers.scss\";\r\nimport { EditOutlined,StopOutlined,DeleteOutlined, CheckOutlined,UserAddOutlined    } from \"@ant-design/icons\";\r\nimport { Switch, List, Button, Avatar, notification,  Modal as ModalAntd} from \"antd\";\r\nimport NoAvatar from \"../../../../assets/img/png/no-avatar.png\";\r\nimport Modal from \"../../../Admin/Modal\";\r\n//import User from \"../../../../pages/Admin/Users/Users\";\r\nimport {getAvatarApi,activeDesactiveUserApi,deleteUserApi} from '../../../../api/user';\r\nimport EditUserForm from \"../../../../components/Admin/User/EditUserForm\";\r\nimport { getAccessToken } from \"../../../../api/auth\";\r\n\r\nconst {confirm} = ModalAntd;\r\n\r\nexport default function ListUsers(props) {\r\n  const [modalCollapsed, setmodalCollapsed] = useState(false);\r\n  const { usersActive, usersInactive,setReloadUsers } = props;\r\n  const [viewUsersActives, setViewUsersActives] = useState(true);\r\n  const [modalTitle, setModalTitle] =  useState(\"\");\r\n  const [modalContent, setModalContent] =  useState(null);\r\n  const token = getAccessToken();\r\n/***********Elmiminar usuario con notification Confirm***************\r\n  const deleteUser = user =>{\r\n    const close1 = (user,b) => {\r\n      if(b){\r\n        deleteUserApi(token, user._id).then((result) => {\r\n          notification[\"success\"]({\r\n            message: result.message,\r\n          });\r\n          setReloadUsers(true)\r\n        });\r\n      }\r\n    };\r\n    const key = `open${Date.now()}`;\r\n    const btn = (\r\n      <Button type=\"primary\" \r\n      size=\"small\" \r\n      onClick={() => close1(user,true)}>\r\n        Confirmar\r\n      </Button>\r\n    );\r\n    notification.open({\r\n      message: 'Eliminar usuario',\r\n      description:\r\n        'Desea eliminar el usuario?',\r\n      btn,\r\n      key,\r\n      onClose: close1(user,false),\r\n    });\r\n  }\r\n***************************************************/    \r\n/**********Eliminar usuario Modal Antd*****************/\r\nconst deleteUser = user =>{\r\n  confirm({\r\n    title:\"Eliminar Usuario\",\r\n    content:\"Desea eliminar?\",\r\n    okText:\"Eliminar\",\r\n    okType:\"danger\",\r\n    cancelText:\"Cancelar\",\r\n    onOk(){\r\n      deleteUserApi(token, user._id).then((result) => {\r\n        notification[\"success\"]({\r\n          message: result.message,\r\n        });\r\n        setReloadUsers(true)\r\n      });      \r\n    }\r\n  });\r\n}\r\n/***************************************************/    \r\n\r\n\r\n  return (\r\n    <div className=\"list-users\">\r\n      <div className=\"list-users__switch\">\r\n        <Switch\r\n          defaultChecked\r\n          onChange={() => setViewUsersActives(!viewUsersActives)}\r\n        />\r\n        <span>\r\n          {viewUsersActives ? \"UsuariosActivos\" : \"Usuarios inactivos\"}\r\n        </span>\r\n        <div className=\"list-users__btn-add-user\">\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() =>{console.log('Hola');}}\r\n            >        \r\n            <UserAddOutlined />\r\n            Nuevo usuario\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      {viewUsersActives ? (\r\n        <UsersActive \r\n            usersActive={usersActive} \r\n            setmodalCollapsed = {setmodalCollapsed}\r\n            modalCollapsed = {modalCollapsed}\r\n            setModalTitle = {setModalTitle}\r\n            setModalContent = {setModalContent}\r\n            setReloadUsers = {setReloadUsers}\r\n            deleteUser = {deleteUser}\r\n\r\n        />\r\n      ) : (\r\n        <UsersInactive \r\n          usersInactive = {usersInactive}\r\n          setReloadUsers={setReloadUsers}\r\n          deleteUser = {deleteUser} />\r\n      )}\r\n\r\n      <Modal\r\n        title={modalTitle}\r\n        isVisible={modalCollapsed}\r\n        setIsVisible={setmodalCollapsed}\r\n      >\r\n         {modalContent}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction UsersActive(props) {\r\n  const { usersActive, setmodalCollapsed, modalCollapsed,setModalContent,\r\n     setModalTitle,setReloadUsers,deleteUser\r\n    } = props;\r\n    const token = getAccessToken();\r\n    const editUser = user =>{\r\n        //console.log(\"1.\"+user);\r\n        setmodalCollapsed(!modalCollapsed)\r\n        setModalTitle(`Editar ${user.name ? user.name : '...'} ${user.lastName ? user.lastName : '...'}`);\r\n        setModalContent(<EditUserForm user={user}\r\n           setmodalCollapsed={setmodalCollapsed}\r\n           setReloadUsers={setReloadUsers}/>);\r\n    }\r\n\r\n    const desactiveUser = user =>{\r\n      const body = {\r\n        \"active\":false\r\n      };\r\n      activeDesactiveUserApi(token,body, user._id).then((result) => {\r\n        notification[\"success\"]({\r\n          message: result.message,\r\n        });\r\n        setReloadUsers(true)\r\n      });\r\n    }\r\n    \r\n  return (\r\n    <List\r\n      className=\"users-active\"\r\n      itemLayout=\"horizontal\"\r\n      dataSource={usersActive}\r\n      renderItem={user => \r\n      <UserActive \r\n        user={user} \r\n        editUser={editUser} \r\n        desactiveUser={desactiveUser}\r\n        deleteUser={deleteUser}/>}\r\n    />\r\n  );\r\n}\r\n\r\nfunction UserActive(props){\r\n  const {user, editUser,desactiveUser,deleteUser} = props;\r\n  const [avatar, setAvatar] = useState(null);\r\n\r\n  useEffect(()=>{\r\n    if(user.avatar){\r\n      getAvatarApi(user.avatar).then(response=>{\r\n        setAvatar(response);\r\n      })\r\n    }else{\r\n      setAvatar(null);\r\n    }\r\n  },[avatar]);\r\n\r\n\r\n  return(\r\n    <List.Item\r\n    actions={[\r\n      <Button\r\n        type=\"primary\"\r\n        onClick={() => editUser(user)}\r\n      >\r\n        <EditOutlined />\r\n      </Button>,\r\n      <Button\r\n        type=\"danger\"\r\n        onClick={() => desactiveUser(user)}\r\n      >\r\n        <StopOutlined  />\r\n      </Button>,\r\n      <Button\r\n        type=\"danger\"\r\n        onClick={() => deleteUser(user)}\r\n      >\r\n        <DeleteOutlined  />\r\n      </Button>,\r\n    ]}\r\n  >\r\n    <List.Item.Meta\r\n      avatar={<Avatar src={avatar ? avatar : NoAvatar} />}\r\n      title={`\r\n                      ${user.name ? user.name : \"..\"}\r\n                      ${user.lastName ? user.lastName : \"...\"}\r\n                  `}\r\n      description={user.email}\r\n    />\r\n  </List.Item>\r\n  );\r\n}\r\n\r\nfunction UsersInactive(props) {\r\n    const { usersInactive,setReloadUsers,deleteUser } = props;\r\n    const token = getAccessToken();\r\n    const activarUsuario = user =>{\r\n      const body = {\r\n        \"active\":true\r\n      };\r\n      activeDesactiveUserApi(token,body, user._id).then((result) => {\r\n        notification[\"success\"]({\r\n          message: result.message,\r\n        });\r\n        setReloadUsers(true)\r\n      });\r\n    }\r\n\r\n    return (\r\n        <List\r\n          className=\"users-active\"\r\n          itemLayout=\"horizontal\"\r\n          dataSource={usersInactive}\r\n          renderItem={user => \r\n          <UserInactive \r\n            user={user} \r\n            activarUsuario={activarUsuario}\r\n            deleteUser={deleteUser}/>}\r\n        />\r\n      );\r\n}\r\n\r\nfunction UserInactive(props){\r\n  const {user,activarUsuario,deleteUser} = props;\r\n  const [avatar, setAvatar] = useState(null);\r\n\r\n  useEffect(()=>{\r\n    if(user.avatar){\r\n      getAvatarApi(user.avatar).then(response=>{\r\n        setAvatar(response);\r\n      })\r\n    }else{\r\n      setAvatar(null);\r\n    }\r\n  },[avatar]);  \r\n\r\n  return (\r\n    <List.Item\r\n    actions={[\r\n      <Button\r\n        type=\"primary\"\r\n        onClick={() => activarUsuario(user)}\r\n      >\r\n        <CheckOutlined />\r\n      </Button>,\r\n      <Button\r\n        type=\"danger\"\r\n        onClick={() => deleteUser(user)}\r\n      >\r\n        <DeleteOutlined  />\r\n      </Button>,\r\n    ]}\r\n  >\r\n    <List.Item.Meta\r\n      avatar={<Avatar src={avatar ? avatar : NoAvatar} />}\r\n      title={`\r\n                      ${user.name ? user.name : \"..\"}\r\n                      ${user.lastName ? user.lastName : \"...\"}\r\n                  `}\r\n      description={user.email}\r\n    />\r\n  </List.Item>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}