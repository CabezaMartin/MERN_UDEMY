{"ast":null,"code":"var _jsxFileName = \"C:\\\\CURSOSUDEMY\\\\PRACTICOS\\\\CURSO MERN\\\\ProyectoWebPersonal\\\\web-personal-cliente\\\\src\\\\components\\\\Admin\\\\Menu\\\\ListMenus\\\\ListMenus.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./ListMenus.scss\";\nimport { EditOutlined, StopOutlined, DeleteOutlined, CheckOutlined, UserAddOutlined } from \"@ant-design/icons\";\nimport { Tooltip, List, Button, Avatar, notification, Modal as ModalAntd } from \"antd\";\nimport Modal from \"../../../Admin/Modal\"; //import User from \"../../../../pages/Admin/Users/Users\";\n\nimport { getMenus, addMenu } from '../../../../api/menu';\nimport { getAccessToken } from \"../../../../api/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  confirm\n} = ModalAntd;\nexport default function ListUsers(props) {\n  const {\n    menus,\n    setReloadMenus\n  } = props;\n  const token = getAccessToken();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-users\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-users__header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-users__header-btn-add-user\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: () => console.log(\"Crear Menu\"),\n          children: [/*#__PURE__*/_jsxDEV(UserAddOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this), \"Nuevo menu\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuItems, {\n      menus: menus,\n      setReloadMenus: setReloadMenus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: modalTitle,\n      isVisible: modalCollapsed,\n      setIsVisible: setmodalCollapsed,\n      children: modalContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_c = ListUsers;\n\nfunction MenuItems(props) {\n  const {\n    menus,\n    setReloadMenus\n  } = props;\n  const token = getAccessToken();\n\n  const editUser = user => {\n    //console.log(\"1.\"+user);\n    setmodalCollapsed(!modalCollapsed);\n    setModalTitle(`Editar ${user.name ? user.name : '...'} ${user.lastName ? user.lastName : '...'}`);\n    setModalContent( /*#__PURE__*/_jsxDEV(EditUserForm, {\n      user: user,\n      setmodalCollapsed: setmodalCollapsed,\n      setReloadUsers: setReloadUsers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }, this));\n  };\n\n  const desactiveUser = user => {\n    const body = {\n      \"active\": false\n    };\n    activeDesactiveUserApi(token, body, user._id).then(result => {\n      notification[\"success\"]({\n        message: result.message\n      });\n      setReloadUsers(true);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(List, {\n    className: \"users-active\",\n    itemLayout: \"horizontal\",\n    dataSource: usersActive,\n    renderItem: user => /*#__PURE__*/_jsxDEV(UserActive, {\n      user: user,\n      editUser: editUser,\n      desactiveUser: desactiveUser,\n      deleteUser: deleteUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = MenuItems;\n\nfunction UserActive(props) {\n  _s();\n\n  const {\n    user,\n    editUser,\n    desactiveUser,\n    deleteUser\n  } = props;\n  const [avatar, setAvatar] = useState(null);\n  useEffect(() => {\n    if (user.avatar) {\n      getAvatarApi(user.avatar).then(response => {\n        setAvatar(response);\n      });\n    } else {\n      setAvatar(null);\n    }\n  }, [avatar]);\n  return /*#__PURE__*/_jsxDEV(List.Item, {\n    actions: [/*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Editar\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: () => editUser(user),\n        children: /*#__PURE__*/_jsxDEV(EditOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"danger\",\n      onClick: () => desactiveUser(user),\n      children: /*#__PURE__*/_jsxDEV(StopOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"danger\",\n      onClick: () => deleteUser(user),\n      children: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)],\n    children: /*#__PURE__*/_jsxDEV(List.Item.Meta, {\n      avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n        src: avatar ? avatar : NoAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }, this),\n      title: `\n                      ${user.name ? user.name : \"..\"}\n                      ${user.lastName ? user.lastName : \"...\"}\n                  `,\n      description: user.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserActive, \"X3aSP2TuZtJcozzJUSg2sRpN1Z4=\");\n\n_c3 = UserActive;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ListUsers\");\n$RefreshReg$(_c2, \"MenuItems\");\n$RefreshReg$(_c3, \"UserActive\");","map":{"version":3,"sources":["C:/CURSOSUDEMY/PRACTICOS/CURSO MERN/ProyectoWebPersonal/web-personal-cliente/src/components/Admin/Menu/ListMenus/ListMenus.js"],"names":["React","useState","useEffect","EditOutlined","StopOutlined","DeleteOutlined","CheckOutlined","UserAddOutlined","Tooltip","List","Button","Avatar","notification","Modal","ModalAntd","getMenus","addMenu","getAccessToken","confirm","ListUsers","props","menus","setReloadMenus","token","console","log","modalTitle","modalCollapsed","setmodalCollapsed","modalContent","MenuItems","editUser","user","setModalTitle","name","lastName","setModalContent","setReloadUsers","desactiveUser","body","activeDesactiveUserApi","_id","then","result","message","usersActive","deleteUser","UserActive","avatar","setAvatar","getAvatarApi","response","NoAvatar","email"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from \"react\";\r\nimport \"./ListMenus.scss\";\r\nimport { EditOutlined,StopOutlined,DeleteOutlined, CheckOutlined,UserAddOutlined    } from \"@ant-design/icons\";\r\nimport { Tooltip ,  List, Button, Avatar, notification,  Modal as ModalAntd} from \"antd\";\r\nimport Modal from \"../../../Admin/Modal\";\r\n//import User from \"../../../../pages/Admin/Users/Users\";\r\nimport {getMenus,addMenu} from '../../../../api/menu';\r\nimport { getAccessToken } from \"../../../../api/auth\";\r\n\r\nconst {confirm} = ModalAntd;\r\n\r\nexport default function ListUsers(props) {\r\n  const {menus,setReloadMenus} = props;\r\n  const token = getAccessToken();\r\n  \r\n  return (\r\n    <div className=\"list-users\">\r\n      <div className=\"list-users__header\">\r\n        <div className=\"list-users__header-btn-add-user\">\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() =>console.log(\"Crear Menu\")}\r\n              >        \r\n              <UserAddOutlined />\r\n              Nuevo menu\r\n            </Button>\r\n          </div>        \r\n      </div>\r\n      <MenuItems \r\n            menus={menus} \r\n            setReloadMenus = {setReloadMenus}\r\n        />\r\n\r\n      <Modal\r\n        title={modalTitle}\r\n        isVisible={modalCollapsed}\r\n        setIsVisible={setmodalCollapsed}\r\n      >\r\n         {modalContent}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction MenuItems(props) {\r\n  const { menus,setReloadMenus} = props;\r\n    const token = getAccessToken();\r\n    const editUser = user =>{\r\n        //console.log(\"1.\"+user);\r\n        setmodalCollapsed(!modalCollapsed)\r\n        setModalTitle(`Editar ${user.name ? user.name : '...'} ${user.lastName ? user.lastName : '...'}`);\r\n        setModalContent(<EditUserForm user={user}\r\n           setmodalCollapsed={setmodalCollapsed}\r\n           setReloadUsers={setReloadUsers}/>);\r\n    }\r\n\r\n    const desactiveUser = user =>{\r\n      const body = {\r\n        \"active\":false\r\n      };\r\n      activeDesactiveUserApi(token,body, user._id).then((result) => {\r\n        notification[\"success\"]({\r\n          message: result.message,\r\n        });\r\n        setReloadUsers(true)\r\n      });\r\n    }\r\n    \r\n  return (\r\n    <List\r\n      className=\"users-active\"\r\n      itemLayout=\"horizontal\"\r\n      dataSource={usersActive}\r\n      renderItem={user => \r\n      <UserActive \r\n        user={user} \r\n        editUser={editUser} \r\n        desactiveUser={desactiveUser}\r\n        deleteUser={deleteUser}/>}\r\n    />\r\n  );\r\n}\r\n\r\nfunction UserActive(props){\r\n  const {user, editUser,desactiveUser,deleteUser} = props;\r\n  const [avatar, setAvatar] = useState(null);\r\n\r\n  useEffect(()=>{\r\n    if(user.avatar){\r\n      getAvatarApi(user.avatar).then(response=>{\r\n        setAvatar(response);\r\n      })\r\n    }else{\r\n      setAvatar(null);\r\n    }\r\n  },[avatar]);\r\n\r\n\r\n  return(\r\n    <List.Item\r\n    actions={[\r\n      <Tooltip title=\"Editar\">\r\n      <Button\r\n        type=\"primary\"\r\n        onClick={() => editUser(user)}\r\n      >\r\n        <EditOutlined />\r\n      </Button>\r\n      </Tooltip>,\r\n      <Button\r\n        type=\"danger\"\r\n        onClick={() => desactiveUser(user)}\r\n      >\r\n        <StopOutlined  />\r\n        \r\n      </Button>,\r\n      <Button\r\n        type=\"danger\"\r\n        onClick={() => deleteUser(user)}\r\n      >\r\n        <DeleteOutlined  />\r\n      </Button>,\r\n    ]}\r\n  >\r\n    <List.Item.Meta\r\n      avatar={<Avatar src={avatar ? avatar : NoAvatar} />}\r\n      title={`\r\n                      ${user.name ? user.name : \"..\"}\r\n                      ${user.lastName ? user.lastName : \"...\"}\r\n                  `}\r\n      description={user.email}\r\n    />\r\n  </List.Item>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}